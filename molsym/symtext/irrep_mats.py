import numpy as np

c3 = np.cos(np.pi/3)
s3 = np.sin(np.pi/3)
c4 = np.cos(np.pi/4)
s4 = np.sin(np.pi/4) # They are the same but IDK
c5 = np.cos(np.pi/5)
s5 = np.sin(np.pi/5)
c25 = np.cos(2*np.pi/5)
s25 = np.sin(2*np.pi/5)
e3 = np.exp(2*np.pi*1j/3)
ce3 = np.conj(e3)
#ce3 = conj(np.exp(2*np.pi*1j/3))
e5 = np.exp(2*np.pi*1j/5)
e25 = np.exp(4*np.pi*1j/5)
ce5 = np.conj(e5)
ce25 = np.conj(e25)
e6 = np.exp(2*np.pi*1j/6)
ce6 = np.conj(e6)
e7 = np.exp(2*np.pi*1j/7)
e72 = np.exp(4*np.pi*1j/7)
e73 = np.exp(6*np.pi*1j/7)
ce7 = np.conj(e7)
ce72 = np.conj(e72)
ce73 = np.conj(e73)
e8 = np.exp(2*np.pi*1j/8)
ce8 = np.conj(e8)


irrm_C1 = {
        "A": np.array([[[1]]])
        }
irrm_Cs = {
        "A'":  np.array([[[1]], [[1]]]), 
        "A''": np.array([[[1]], [[-1]]])
        }
irrm_Ci = {
        "Ag": np.array([[[1]], [[1]]]), 
        "Au": np.array([[[1]], [[-1]]])
        }

irrm_C2 = {
        "A": np.array([[[1]], [[1]]]), 
        "B": np.array([[[1]], [[-1]]])
        }
irrm_C3 = {
      "A" : np.array([[[1]],[[1]],  [[1]]]),
    "E_1" : np.array([[[1]],[[e3]], [[ce3]]]),
    "E_2" : np.array([[[1]],[[ce3]],[[e3]]])
}
irrm_C4 = {
    "A"  :  np.array([[[1]],[[1]],[[1]],[[1]]]),
    "B"  :  np.array([[[1]],[[-1]],[[1]],[[-1]]]),
    "E_1" : np.array([[[1]],[[1j]],[[-1]],[[-1j]]]),
    "E_2" : np.array([[[1]],[[-1j]],[[-1]],[[1j]]])
}
irrm_C5 = {
    "A"    : np.array([[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "E1_1" : np.array([[[1]],[[e5]],[[e25]],[[ce25]],[[ce5]]]),
    "E1_2" : np.array([[[1]],[[ce5]],[[ce25]],[[e25]],[[e5]]]),
    "E2_1" : np.array([[[1]],[[e25]],[[ce5]],[[e5]],[[ce25]]]),
    "E2_2" : np.array([[[1]],[[ce25]],[[e5]],[[ce5]],[[e25]]])
}
irrm_C6 = {
    "A"    : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "B"    : np.array([[[1]],[[-1]],[[1]],[[-1]],[[1]],[[-1]]]),
    "E1_1" : np.array([[[1]],[[e6]],[[-ce6]],[[-1]],[[-e6]],[[ce6]]]),
    "E1_2" : np.array([[[1]],[[ce6]],[[-e6]],[[-1]],[[-ce6]],[[e6]]]),
    "E2_1" : np.array([[[1]],[[-ce6]],[[-e6]],[[1]],[[-ce6]],[[-e6]]]),
    "E2_2" : np.array([[[1]],[[-e6]],[[-ce6]],[[1]],[[-e6]],[[-ce6]]])
}
irrm_C7 = {
    "A"    :  np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "E1_1" :  np.array([[[1]],[[e7]],[[e72]],[[e73]],[[ce73]],[[ce72]],[[ce7]]]),
    "E1_2" :  np.array([[[1]],[[ce7]],[[ce72]],[[ce73]],[[e73]],[[e72]],[[e7]]]),
    "E2_1" :  np.array([[[1]],[[e72]],[[ce73]],[[ce7]],[[e7]],[[e73]],[[ce72]]]),
    "E2_2" :  np.array([[[1]],[[ce72]],[[e73]],[[e7]],[[ce7]],[[ce73]],[[e72]]]),
    "E3_1" :  np.array([[[1]],[[e73]],[[ce7]],[[e72]],[[ce72]],[[e7]],[[ce73]]]),
    "E3_2" :  np.array([[[1]],[[ce73]],[[e7]],[[ce72]],[[e72]],[[ce7]],[[e73]]])
}
irrm_C8 = {
    "A"    : np.array([[[1]],[[1]],   [[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "B"    : np.array([[[1]],[[-1]],   [[1]],[[-1]],[[1]],[[-1]],[[1]],[[-1]]]),
    "E1_1" : np.array([[[1]],  [[e8]], [[1j]],[[-ce8]],[[-1]], [[-e8]],[[-1j]], [[ce8]]]),
    "E1_2" : np.array([[[1]], [[ce8]],[[-1j]], [[-e8]],[[-1]],[[-ce8]], [[1j]],  [[e8]]]),
    "E2_1" : np.array([[[1]],  [[1j]], [[-1]], [[-1j]], [[1]],  [[1j]], [[-1]], [[-1j]]]),
    "E2_2" : np.array([[[1]], [[-1j]], [[-1]],  [[1j]], [[1]], [[-1j]], [[-1]],  [[1j]]]),
    "E3_1" : np.array([[[1]], [[-e8]], [[1j]], [[ce8]],[[-1]],  [[e8]],[[-1j]],[[-ce8]]]),
    "E3_2" : np.array([[[1]],[[-ce8]],[[-1j]],  [[e8]],[[-1]], [[ce8]], [[1j]], [[-e8]]])
}

irrm_S4 = {
    "A"   : np.array([[[1]],[[1]],[[1]],[[1]]]),
    "B"   : np.array([[[1]],[[1]],[[-1]],[[-1]]]),
    "E_1" : np.array([[[1]],[[-1]],[[1j]],[[-1j]]]),
    "E_2" : np.array([[[1]],[[-1]],[[-1j]],[[1j]]])
}
irrm_S6 = {
    "Ag"   : np.array([[[1]],[[1]], [[1]],[[1]],[[1]],[[1]]]),
    "E_1g"  : np.array([[[1]],[[1]], [[e3]],[[ce3]],[[ce3]],[[e3]]]),
    "E_2g"  : np.array([[[1]],[[1]], [[ce3]],[[e3]],[[e3]],[[ce3]]]),
    "Au"   : np.array([[[1]],[[-1]],[[1]],[[1]],[[-1]],[[-1]]]),
    "E_1u"  : np.array([[[1]],[[-1]],[[e3]],[[ce3]],[[-ce3]],[[-e3]]]),
    "E_2u"  : np.array([[[1]],[[-1]],[[ce3]],[[e3]],[[-e3]],[[-ce3]]])
}
irrm_S8 = {
    "A"    : np.array([[[1]],[[1]], [[1]], [[1]],[[1]],[[1]],[[1]],[[1]]]),
    "B"    : np.array([[[1]],[[1]], [[1]], [[1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "E1_1" : np.array([[[1]], [[1j]],[[-1]],[[-1j]],  [[e8]],[[-ce8]], [[-e8]], [[ce8]]]),
    "E1_2" : np.array([[[1]],[[-1j]],[[-1]], [[1j]], [[ce8]], [[-e8]],[[-ce8]],  [[e8]]]),
    "E2_1" : np.array([[[1]], [[-1]], [[1]], [[-1]],  [[1j]], [[-1j]],  [[1j]], [[-1j]]]),
    "E2_2" : np.array([[[1]], [[-1]], [[1]], [[-1]], [[-1j]],  [[1j]], [[-1j]],  [[1j]]]),
    "E3_1" : np.array([[[1]],[[-1j]],[[-1]], [[1j]],[[-ce8]],  [[e8]], [[ce8]], [[-e8]]]),
    "E3_2" : np.array([[[1]], [[1j]],[[-1]],[[-1j]], [[-e8]], [[ce8]],  [[e8]],[[-ce8]]])
    }

irrm_C2h = {
    "Ag": np.array([[[1]],[[1]],[[1]],[[1]]]),
    "Bg": np.array([[[1]],[[-1]],[[1]],[[-1]]]),
    "Au": np.array([[[1]],[[-1]],[[-1]],[[1]]]),
    "Bu": np.array([[[1]],[[1]],[[-1]],[[-1]]])
}
irrm_C3h = {
    "A'"   : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "E_1'"  : np.array([[[1]],[[1]],[[e3]],[[ce3]],[[e3]],[[ce3]]]),
    "E_2'"  : np.array([[[1]],[[1]],[[ce3]],[[e3]],[[ce3]],[[e3]]]),
    "A''"  : np.array([[[1]],[[-1]],[[1]],[[1]],[[-1]],[[-1]]]),
    "E_1''" : np.array([[[1]],[[-1]],[[e3]],[[ce3]],[[-e3]],[[-ce3]]]),
    "E_2''" : np.array([[[1]],[[-1]],[[ce3]],[[e3]],[[-ce3]],[[-e3]]])
}
irrm_C4h = {
    "Ag"  : np.array([[[1]], [[1]], [[1]],  [[1]], [[1]],  [[1]],  [[1]],  [[1]]]),
    "Bg"  : np.array([[[1]], [[1]], [[1]], [[-1]], [[1]], [[-1]], [[-1]], [[-1]]]),
    "E_1g" : np.array([[[1]],[[-1]], [[1]], [[1j]],[[-1]],[[-1j]],[[-1j]], [[1j]]]),
    "E_2g" : np.array([[[1]],[[-1]], [[1]],[[-1j]],[[-1]], [[1j]], [[1j]],[[-1j]]]),
    "Au"  : np.array([[[1]],[[-1]],[[-1]],  [[1]], [[1]],  [[1]], [[-1]], [[-1]]]),
    "Bu"  : np.array([[[1]],[[-1]],[[-1]], [[-1]], [[1]], [[-1]],  [[1]],  [[1]]]),
    "E_1u" : np.array([[[1]], [[1]],[[-1]], [[1j]],[[-1]],[[-1j]], [[1j]],[[-1j]]]),
    "E_2u" : np.array([[[1]], [[1]],[[-1]],[[-1j]],[[-1]], [[1j]],[[-1j]], [[1j]]])
}
irrm_C5h = {
    "A'"    : np.array([[[1]], [[1]],    [[1]],    [[1]],    [[1]],    [[1]],    [[1]],    [[1]],    [[1]],    [[1]]]),
    "E1_1'"  : np.array([[[1]], [[1]],   [[e5]],  [[e25]], [[ce25]],  [[ce5]],   [[e5]],  [[e25]], [[ce25]],  [[ce5]]]),
    "E1_2'"  : np.array([[[1]], [[1]],  [[ce5]], [[ce25]],  [[e25]],   [[e5]],  [[ce5]], [[ce25]],  [[e25]],   [[e5]]]),
    "E2_1'"  : np.array([[[1]], [[1]],  [[e25]],  [[ce5]],   [[e5]], [[ce25]],  [[e25]],  [[ce5]],   [[e5]], [[ce25]]]),
    "E2_2'"  : np.array([[[1]], [[1]], [[ce25]],   [[e5]],  [[ce5]],  [[e25]], [[ce25]],   [[e5]],  [[ce5]],  [[e25]]]),
    "A''"   : np.array([[[1]],[[-1]],    [[1]],    [[1]],    [[1]],    [[1]],   [[-1]],   [[-1]],   [[-1]],   [[-1]]]),
    "E1_1''" : np.array([[[1]],[[-1]],   [[e5]],  [[e25]], [[ce25]],  [[ce5]],  [[-e5]], [[-e25]],[[-ce25]], [[-ce5]]]),
    "E1_2''" : np.array([[[1]],[[-1]],  [[ce5]], [[ce25]],  [[e25]],   [[e5]], [[-ce5]],[[-ce25]], [[-e25]],  [[-e5]]]),
    "E2_1''" : np.array([[[1]],[[-1]],  [[e25]],  [[ce5]],   [[e5]], [[ce25]], [[-e25]], [[-ce5]],  [[-e5]],[[-ce25]]]),
    "E2_2''" : np.array([[[1]],[[-1]], [[ce25]],   [[e5]],  [[ce5]],  [[e25]],[[-ce25]],  [[-e5]], [[-ce5]], [[-e25]]])
}
irrm_C6h = {
    "Ag"   : np.array([[[1]], [[1]], [[1]],   [[1]],   [[1]], [[1]],   [[1]],   [[1]],   [[1]],   [[1]],   [[1]],   [[1]]]),
    "Bg"   : np.array([[[1]],[[-1]], [[1]],  [[-1]],   [[1]],[[-1]],   [[1]],  [[-1]],   [[1]],  [[-1]],  [[-1]],   [[1]]]),
    "E1_1g" : np.array([[[1]],[[-1]], [[1]],  [[e6]],[[-ce6]],[[-1]], [[-e6]], [[ce6]], [[-e6]], [[ce6]],  [[e6]],[[-ce6]]]),
    "E1_2g" : np.array([[[1]],[[-1]], [[1]], [[ce6]], [[-e6]],[[-1]],[[-ce6]],  [[e6]],[[-ce6]],  [[e6]], [[ce6]], [[-e6]]]),
    "E2_1g" : np.array([[[1]], [[1]], [[1]],[[-ce6]], [[-e6]], [[1]],[[-ce6]], [[-e6]],[[-ce6]], [[-e6]],[[-ce6]], [[-e6]]]),
    "E2_2g" : np.array([[[1]], [[1]], [[1]], [[-e6]],[[-ce6]], [[1]], [[-e6]],[[-ce6]], [[-e6]],[[-ce6]], [[-e6]],[[-ce6]]]),
    "Au"   : np.array([[[1]],[[-1]],[[-1]],   [[1]],   [[1]], [[1]],   [[1]],   [[1]],  [[-1]],  [[-1]],  [[-1]],  [[-1]]]),
    "Bu"   : np.array([[[1]], [[1]],[[-1]],  [[-1]],   [[1]],[[-1]],   [[1]],  [[-1]],  [[-1]],   [[1]],   [[1]],  [[-1]]]),
    "E1_1u" : np.array([[[1]], [[1]],[[-1]],  [[e6]],[[-ce6]],[[-1]], [[-e6]], [[ce6]],  [[e6]],[[-ce6]], [[-e6]], [[ce6]]]),
    "E1_2u" : np.array([[[1]], [[1]],[[-1]], [[ce6]], [[-e6]],[[-1]],[[-ce6]],  [[e6]], [[ce6]], [[-e6]],[[-ce6]],  [[e6]]]),
    "E2_1u" : np.array([[[1]],[[-1]],[[-1]],[[-ce6]], [[-e6]], [[1]],[[-ce6]], [[-e6]], [[ce6]],  [[e6]], [[ce6]],  [[e6]]]),
    "E2_2u" : np.array([[[1]],[[-1]],[[-1]], [[-e6]],[[-ce6]], [[1]], [[-e6]],[[-ce6]],  [[e6]], [[ce6]],  [[e6]], [[ce6]]])
}

irrm_C2v = {
        "A1": np.array([[[1.]], [[1.]], [[1.]],  [[1.]]]), 
        "A2": np.array([[[1.]], [[1.]], [[-1.]], [[-1.]]]),
        "B1": np.array([[[1.]], [[-1.]], [[1.]], [[-1.]]]), 
        "B2": np.array([[[1.]], [[-1.]], [[-1.]], [[1.]]])
}
irrm_C3v = {
        "A1" : np.array([[[1]],[[1]],[[1]],[[1]], [[1 ]],[[1 ]]]),
        "A2" : np.array([[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]]]),
        "E"  : np.array([[[1, 0],[0, 1]], [[-c3, -s3],[ s3, -c3]], [[-c3, s3],[ -s3, -c3]], [[1, 0],[0, -1]], [[-c3, -s3],[ -s3, c3]], [[-c3, s3],[ s3, c3]]])
    }
irrm_C4v = {
    "A1" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "A2" : np.array([[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "B1" : np.array([[[1]],[[-1]],[[1]],[[-1]],[[1]],[[1]],[[-1]],[[-1]]]),
    "B2" : np.array([[[1]],[[-1]],[[1]],[[-1]],[[-1]],[[-1]],[[1]],[[1]]]),
    "E"  : np.array([[[1, 0],[0, 1]],[[0, -1],[1, 0]],[[-1, 0],[0, -1]],[[0, 1],[ -1, 0]],[[1, 0], [0, -1]],[[-1, 0], [0, 1]],[[0, 1], [1, 0]],[[0, -1], [-1, 0]]])
}
irrm_C5v = {
    "A1" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]], [[1]], [[1]], [[1]],[[1]]]),
    "A2" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "E1" : np.array([[[1,  0], [0, 1]],[[c25, -s25], [s25, c25]],[[-c5, -s5],[s5, -c5]],[[-c5, s5],[-s5, -c5]],[[c25, s25],[-s25, c25]],
             [[1, 0],[0, -1]],[[-c5, s5],[s5, c5]],[[c25, -s25], [-s25, -c25]],[[c25, s25],[s25, -c25]],[[-c5,-s5],[-s5, c5]]]),
    "E2" : np.array([[[1, 0],[0, 1]],[[-c5, -s5],[s5, -c5]],[[c25, s25],[-s25, c25]],[[c25, -s25],[s25, c25]],[[-c5, s5], [-s5, -c5]],
             [[1, 0],[0, -1]],[[c25, -s25], [-s25, -c25]],[[-c5, -s5], [-s5, c5]],[[-c5, s5], [s5, c5]],[[c25, s25],[s25, -c25]]])
}
irrm_C6v = {
    "A1" : np.array([[[1]],[[1]], [[1]],[[1]], [[1]],[[1]], [[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "A2" : np.array([[[1]],[[1]], [[1]],[[1]], [[1]],[[1]], [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "B1" : np.array([[[1]],[[-1]],[[1]],[[-1]],[[1]],[[-1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]]]),
    "B2" : np.array([[[1]],[[-1]],[[1]],[[-1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[1]],[[1]],[[1]]]),
    "E1" : np.array([[[1, 0],[0, 1]],[[c3, -s3],[s3, c3]],[[-c3, -s3],[s3, -c3]],[[-1, 0],[0, -1]],[[-c3, s3],[-s3, -c3]],[[c3, s3],[-s3, c3]],
             [[1, 0],[0, -1]],[[-c3, s3],[s3, c3]],[[-c3, -s3],[-s3, c3]],[[c3, s3],[s3, -c3]],[[-1, 0],[0, 1]],[[c3, -s3],[-s3, -c3]]]),
    "E2" : np.array([[[1, 0],[0, 1]],[[-c3, s3],[-s3, -c3]],[[-c3, -s3],[s3, -c3]],[[1, 0],[0, 1]],[[-c3, s3],[-s3, -c3]],[[-c3, -s3],[s3, -c3]],
             [[1, 0],[0, -1]],[[-c3, s3],[s3, c3]],[[-c3, -s3],[-s3, c3]],[[-c3, -s3],[-s3, c3]],[[1, 0],[0, -1]],[[-c3, s3],[s3, c3]]])
}

irrm_D2 = {
    "A"  : np.array([[[1]],[[1]],[[1]],[[1]]]),
    "B1" : np.array([[[1]],[[1]],[[-1]],[[-1]]]),
    "B2" : np.array([[[1]],[[-1]],[[-1]],[[1]]]),
    "B3" : np.array([[[1]],[[-1]],[[1]],[[-1]]])} # To preserve Cotton ordering, our symels are zxy and Cotton's are zyx (Essentially swap B2 and B3}
irrm_D3 = {
    "A1" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "A2" : np.array([[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]]]),
    "E"  : np.array([[[1, 0],[0, 1]],[[-c3, -s3],[s3, -c3]],[[-c3, s3],[-s3, -c3]],[[1, 0],[0, -1]],[[-c3, -s3],[-s3, c3]],[[-c3, s3],[s3, c3]]])
}
irrm_D4 = {
    "A1" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "A2" : np.array([[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "B1" : np.array([[[1]],[[-1]],[[1]],[[-1]],[[1]],[[1]],[[-1]],[[-1]]]),
    "B2" : np.array([[[1]],[[-1]],[[1]],[[-1]],[[-1]],[[-1]],[[1]],[[1]]]),
    "E"  : np.array([[[1, 0],[0, 1]],[[0, -1],[1, 0]],[[-1, 0],[0, -1]],[[0, 1],[-1, 0]],[[1, 0],[0, -1]],[[-1, 0],[0, 1]],[[0, 1],[1, 0]],[[0, -1],[-1, 0]]])
}
irrm_D5 = {
    "A1" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "A2" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "E1" : np.array([[[1, 0],[0, 1]],[[c25, -s25],[ s25, c25]],[[-c5, -s5],[ s5, -c5]],[[-c5, s5],[ -s5, -c5]],[[c25, s25],[ -s25, c25]],
             [[1, 0],[0, -1]],[[-c5, s5],[ s5, c5]],[[c25, -s25],[ -s25, -c25]],[[c25, s25],[ s25, -c25]],[[-c5, -s5],[ -s5, c5]]]),
    "E2" : np.array([[[1, 0],[0, 1]],[[-c5, -s5],[ s5, -c5]],[[c25, s25],[ -s25, c25]],[[c25, -s25],[ s25, c25]],[[-c5, s5],[ -s5, -c5]],
             [[1, 0],[0, -1]],[[c25, -s25],[ -s25, -c25]],[[-c5, -s5],[ -s5, c5]],[[-c5, s5],[ s5, c5]],[[c25, s25],[ s25, -c25]]])}
irrm_D6 = {
    "A1" : np.array([[[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]]]),
    "A2" : np.array([[[1]], [[1]], [[1]], [[1]], [[1]], [[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "B1" : np.array([[[1]],[[-1]], [[1]],[[-1]], [[1]],[[-1]], [[1]], [[1]], [[1]],[[-1]],[[-1]],[[-1]]]),
    "B2" : np.array([[[1]],[[-1]], [[1]],[[-1]], [[1]],[[-1]],[[-1]],[[-1]],[[-1]], [[1]], [[1]], [[1]]]),
    "E1" : np.array([[[1, 0],[0, 1]],[[c3, -s3],[s3, c3]],[[-c3, -s3],[s3, -c3]],[[-1, 0],[0, -1]],[[-c3, s3],[-s3, -c3]],[[c3, s3],[-s3, c3]],
             [[1, 0],[0, -1]],[[-c3, s3],[s3, c3]],[[-c3, -s3],[-s3, c3]],[[c3, s3],[s3, -c3]],[[-1, 0],[0, 1]],[[c3, -s3],[-s3, -c3]]]),
    "E2" : np.array([[[1, 0],[0, 1]],[[-c3, s3],[-s3, -c3]],[[-c3, -s3],[s3, -c3]],[[1, 0],[0, 1]],[[-c3, s3],[-s3, -c3]],[[-c3, -s3],[s3, -c3]],
             [[-1, 0],[0, 1]],[[c3, -s3],[-s3, -c3]],[[c3, s3],[s3, -c3]],[[c3, s3],[s3, -c3]],[[-1, 0],[ 0, 1]],[[c3, -s3],[-s3, -c3]]])
}
irrm_D8 = {
    "A1" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
             [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "A2" : np.array([[[1]], [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
            [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "B1" : np.array([[[1]],[[-1]],[[1]],[[-1]],[[1]],[[-1]],[[1]],[[-1]],
             [[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "B2" : np.array([[[1]],[[-1]],[[1]],[[-1]],[[1]],[[-1]],[[1]],[[-1]],
             [[-1]],[[-1]],[[-1]],[[-1]],[[1]],[[1]],[[1]],[[1]]]),
    "E1" : np.array([[[1, 0],[0, 1]],[[c4, -s4],[s4, c4]],[[0, -1],[1, 0]],[[-c4, -s4],[s4, -c4]],[[-1, 0],[0, -1]],[[-c4, s4],[-s4, -c4]],[[0, 1],[-1, 0]],[[c4, s4],[-s4, c4]],
             [[1, 0],[0, -1]],[[0, 1],[1, 0]],[[-1, 0],[0, 1]],[[0, -1],[-1, 0]],[[c4, s4],[s4, -c4]],[[-c4, s4],[s4, c4]],[[-c4, -s4],[-s4, c4]],[[c4, -s4],[-s4, -c4]]]),
    "E2" : np.array([[[1, 0],[0, 1]],[[0, -1],[1, 0]],[[-1, 0],[0, -1]],[[0, 1],[-1, 0]],[[1, 0],[0, 1]],[[0, -1],[1, 0]],[[-1, 0],[0, -1]],[[0, 1],[-1, 0]],
             [[1, 0],[0, -1]],[[-1, 0],[0, 1]],[[1, 0],[0, -1]],[[-1, 0],[0, 1]],[[0, 1],[1, 0]],[[0 ,-1],[-1, 0]],[[0, 1],[1, 0]],[[0, -1],[-1, 0]]]),
    "E3" : np.array([[[1, 0],[0, 1]],[[-c4, s4],[-s4, -c4]],[[0, -1],[1, 0]],[[c4, s4],[-s4, c4]],[[-1, 0],[0, -1]],[[c4, -s4],[s4, c4]],[[0, 1],[-1, 0]],[[-c4, -s4],[s4, -c4]],
             [[-1, 0],[0, 1]],[[0, -1],[-1, 0]],[[1, 0],[0, -1]],[[0, 1],[1, 0]],[[c4, s4],[s4, -c4]],[[-c4, s4],[s4, c4]],[[-c4, -s4],[-s4, c4]],[[c4, -s4],[-s4, -c4]]])
}

irrm_D2h = {
    "Ag"  : np.array([[[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]]]),
    "B1g" : np.array([[[1]], [[1]], [[1]], [[1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "B2g" : np.array([[[1]],[[-1]], [[1]],[[-1]],[[-1]], [[1]], [[1]],[[-1]]]),
    "B3g" : np.array([[[1]],[[-1]], [[1]],[[-1]], [[1]],[[-1]],[[-1]], [[1]]]),
    "Au"  : np.array([[[1]],[[-1]],[[-1]], [[1]], [[1]], [[1]],[[-1]],[[-1]]]),
    "B1u" : np.array([[[1]],[[-1]],[[-1]], [[1]],[[-1]],[[-1]], [[1]], [[1]]]),
    "B2u" : np.array([[[1]], [[1]],[[-1]],[[-1]],[[-1]], [[1]],[[-1]], [[1]]]),
    "B3u" : np.array([[[1]], [[1]],[[-1]],[[-1]], [[1]],[[-1]], [[1]],[[-1]]])

} # Cotton ordering is different because I put x in front of y...
irrm_D3h = {
    "A1'" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "A2'" : np.array([[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]]]),
    "E'"  : np.array([[[1, 0],[0, 1]],[[1, 0],[0, 1]],[[-c3, -s3],[s3, -c3]],[[-c3, s3],[-s3, -c3]],[[1, 0],[0, -1]],[[-c3, -s3],[-s3, c3]],[[-c3, s3],[s3, c3]],
             [[-c3, -s3],[s3, -c3]],[[-c3, s3],[-s3, -c3]],[[1, 0],[0, -1]],[[-c3, -s3],[-s3, c3]],[[-c3, s3],[s3, c3]]]),
    "A1''" : np.array([[[1]],[[-1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "A2''" : np.array([[[1]],[[-1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[1]],[[1]],[[1]]]),
    "E''" : np.array([[[1, 0],[0, 1]],[[-1, 0],[0, -1]],[[-c3, -s3],[s3, -c3]],[[-c3, s3],[-s3, -c3]],[[1, 0],[0, -1]],[[-c3, -s3],[-s3, c3]],[[-c3, s3],[s3, c3]],
             [[c3, s3],[-s3, c3]],[[c3, -s3],[s3, c3]],[[-1,  0],[0, 1]],[[c3, s3],[s3, -c3]],[[c3, -s3],[-s3, -c3]]])
             
}
irrm_D4h = {
    "A1g" : np.array([[[1]], [[1]], [[1]],  [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]],   [[1]], [[1]], [[1]], [[1]], [[1]], [[1]]]),
    "A2g" : np.array([[[1]], [[1]], [[1]],  [[1]], [[1]], [[1]],[[-1]],[[-1]],[[-1]],[[-1]],   [[1]], [[1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "B1g" : np.array([[[1]], [[1]], [[1]], [[-1]], [[1]],[[-1]], [[1]], [[1]],[[-1]],[[-1]],  [[-1]],[[-1]], [[1]], [[1]],[[-1]],[[-1]]]),
    "B2g" : np.array([[[1]], [[1]], [[1]], [[-1]], [[1]],[[-1]],[[-1]],[[-1]], [[1]], [[1]],  [[-1]],[[-1]],[[-1]],[[-1]], [[1]], [[1]]]),
    "Eg"  : np.array([[[1, 0],[0, 1]],[[-1, 0],[0, -1]],[[1, 0],[0, 1]],
             [[0, -1],[1, 0]],[[-1, 0],[0, -1]],[[0, 1],[-1, 0]],[[1, 0],[0, -1]],[[-1, 0],[0, 1]],[[0, 1],[1, 0]],[[0, -1],[-1, 0]],
             [[0, 1],[-1, 0]],[[0, -1],[1, 0]],[[-1, 0],[0, 1]],[[1, 0],[0, -1]],[[0, -1],[-1, 0]],[[0, 1],[1, 0]]]),
    "A1u" : np.array([ [[1]],[[-1]],[[-1]],  [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "A2u" : np.array([ [[1]],[[-1]],[[-1]],  [[1]], [[1]], [[1]],[[-1]],[[-1]],[[-1]],[[-1]], [[-1]],[[-1]], [[1]], [[1]], [[1]], [[1]]]),
    "B1u" : np.array([ [[1]],[[-1]],[[-1]], [[-1]], [[1]],[[-1]], [[1]], [[1]],[[-1]],[[-1]],  [[1]], [[1]],[[-1]],[[-1]], [[1]], [[1]]]),
    "B2u" : np.array([ [[1]],[[-1]],[[-1]], [[-1]], [[1]],[[-1]],[[-1]],[[-1]], [[1]], [[1]],  [[1]], [[1]], [[1]], [[1]],[[-1]],[[-1]]]),
    "Eu"  : np.array([[[1, 0],[0, 1]],[[1, 0],[0, 1]],[[-1, 0],[0, -1]],
             [[0, -1],[1, 0]],[[-1, 0],[0, -1]],[[0, 1],[-1, 0]],[[1, 0],[0, -1]],[[-1, 0],[0, 1]],[[0, 1],[1, 0]],[[0, -1],[-1, 0]],
             [[0, -1],[1, 0]],[[0, 1],[-1, 0]],[[1, 0],[0, -1]],[[-1, 0],[0, 1]],[[0, 1],[1, 0]],[[0, -1],[-1, 0]]])
}
irrm_D5h = {
    "A1'"  : np.array([[[1]], [[1]],  [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]],
                          [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]]]),
    "A2'"  : np.array([ [[1]], [[1]],  [[1]], [[1]], [[1]], [[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],
                          [[1]], [[1]], [[1]], [[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "E1'"  : np.array([[[1, 0],[0, 1]],[[1, 0],[0, 1]], # E, σh
              [[c25, -s25],[ s25, c25]],[[-c5, -s5],[ s5, -c5]],[[-c5, s5],[ -s5, -c5]],[[c25, s25],[ -s25, c25]], # C5s
              [[1, 0],[0, -1]],[[-c5, s5],[ s5, c5]],[[c25, -s25],[ -s25, -c25]],[[c25, s25],[ s25, -c25]],[[-c5, -s5],[ -s5, c5]],
              [[c25, -s25],[ s25, c25]],[[-c5, -s5],[ s5, -c5]],[[-c5 ,s5],[ -s5, -c5]],[[c25, s25],[ -s25, c25]],
              [[1, 0],[0, -1]],[[-c5, s5],[ s5, c5]],[[c25, -s25],[ -s25, -c25]],[[c25, s25],[ s25, -c25]],[[-c5, -s5],[ -s5, c5]]]),
    "E2'"  : np.array([[[1, 0],[0, 1]],[[1, 0],[0, 1]],
              [[-c5, -s5],[ s5, -c5]],[[c25, s25],[ -s25, c25]],[[c25, -s25],[ s25, c25]],[[-c5, s5],[ -s5, -c5]],
              [[1, 0],[0 ,-1]],[[c25, -s25],[ -s25, -c25]],[[-c5, -s5],[ -s5, c5]],[[-c5, s5],[ s5, c5]],[[c25, s25],[ s25, -c25]],
              [[-c5, -s5],[ s5, -c5]],[[c25, s25],[ -s25, c25]],[[c25, -s25],[ s25, c25]],[[-c5, s5],[ -s5, -c5]],
              [[1, 0],[0, -1]],[[c25, -s25],[ -s25, -c25]],[[-c5, -s5],[ -s5, c5]],[[-c5, s5],[ s5, c5]],[[c25, s25],[ s25, -c25]]]),
    "A1''" : np.array([[[1]],[[-1]],  [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]],
                         [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "A2''" : np.array([[[1]],[[-1]],   [[1]], [[1]], [[1]], [[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],
                         [[-1]],[[-1]],[[-1]],[[-1]], [[1]], [[1]], [[1]], [[1]], [[1]]]),
    "E1''" : np.array([[[1, 0],[0, 1]],[[-1, 0],[0, -1]], # E, σh
              [[c25, -s25],[ s25, c25]],[[-c5, -s5],[ s5, -c5]],[[-c5, s5],[ -s5, -c5]],[[c25, s25],[ -s25, c25]], # C5s
              [[1, 0],[0, -1]],[[-c5, s5],[ s5, c5]],[[c25, -s25],[ -s25, -c25]],[[c25, s25],[ s25, -c25]],[[-c5, -s5],[ -s5, c5]],
              [[-c25, s25],[ -s25, -c25]],[[c5, s5],[ -s5, c5]],[[c5, -s5],[ s5, c5]],[[-c25, -s25],[ s25, -c25]],
              [[-1, 0],[0, 1]],[[c5, -s5],[ -s5, -c5]],[[-c25, s25],[ s25, c25]],[[-c25, -s25],[ -s25, c25]],[[c5, s5],[ s5, -c5]]]),
    "E2''" : np.array([[[1, 0],[0, 1]],[[-1, 0],[0 ,-1]],
              [[-c5, -s5],[ s5, -c5]],[[c25, s25],[ -s25, c25]],[[c25, -s25],[ s25, c25]],[[-c5, s5],[ -s5, -c5]],
              [[1, 0],[0, -1]],[[c25, -s25],[ -s25, -c25]],[[-c5, -s5],[ -s5 ,c5]],[[-c5, s5],[ s5, c5]],[[c25, s25],[ s25, -c25]],
              [[c5, s5],[ -s5, c5]],[[-c25, -s25],[ s25, -c25]],[[-c25, s25],[ -s25, -c25]],[[c5, -s5],[ s5, c5]],
              [[-1, 0],[0, 1]],[[-c25, s25],[ s25, c25]],[[c5, s5],[ s5, -c5]],[[c5 ,-s5],[ -s5, -c5]],[[-c25, -s25],[ -s25, c25]]])
              
}
irrm_D6h = {
    "A1g" : np.array([ [[1]], [[1]], [[1]], # E, σh, i
               [[1]], [[1]], [[1]], [[1]], [[1]], # Cns
               [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], # C2s
               [[1]], [[1]], [[1]], [[1]], # Sns
               [[1]], [[1]], [[1]], [[1]], [[1]], [[1]]]), # σs
    "A2g" : np.array([ [[1]], [[1]], [[1]], # E, σh, i
               [[1]], [[1]], [[1]], [[1]], [[1]], # Cns
              [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]], # C2s
               [[1]], [[1]], [[1]], [[1]], # Sns
              [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]), # σs
    "B1g" : np.array([ [[1]],[[-1]], [[1]], # E, σh, i
              [[-1]], [[1]],[[-1]], [[1]],[[-1]], # Cns
               [[1]], [[1]], [[1]],[[-1]],[[-1]],[[-1]], # C2s
               [[1]],[[-1]],[[-1]], [[1]], # Sns
              [[-1]],[[-1]],[[-1]], [[1]], [[1]], [[1]]]), # σs
    "B2g" : np.array([ [[1]],[[-1]], [[1]], # E, σh, i
              [[-1]], [[1]],[[-1]], [[1]],[[-1]], # Cns
              [[-1]],[[-1]],[[-1]], [[1]], [[1]], [[1]], # C2s
               [[1]],[[-1]],[[-1]], [[1]], # Sns
               [[1]], [[1]], [[1]],[[-1]],[[-1]],[[-1]]]), # σs
   
    "E1g" : np.array(
        [[[1,    0],[0,   1]],[[-1,    0],[0,   -1]],[[1,  0],[0, 1]],
        [[c3, -s3],[s3, c3]],[[-c3, -s3],[s3, -c3]],[[-1, 0],[0, -1]],[[-c3, s3],[-s3, -c3]],[[c3, s3],[-s3, c3]],
        [[1,    0],[0,  -1]],[[-c3, s3],[s3, c3]],[[-c3, -s3],[-s3, c3]],[[c3, s3],[s3, -c3]],[[-1, 0],[0, 1]],[[c3, -s3],[-s3, -c3]],
        [[-c3, s3],[-s3, -c3]],[[c3, s3],[-s3, c3]],[[c3, -s3],[s3, c3]],[[-c3, -s3],[s3, -c3]],
        [[-1,   0],[0, 1]],[[c3, -s3], [-s3, -c3]],[[c3, s3],[s3, -c3]],[[-c3, -s3],[-s3, c3]],[[1, 0],[0, -1]],[[-c3, s3],[s3, c3]]]),


    "E2g" : np.array([[[1, 0],[0, 1]],[[1, 0],[0, 1]],[[1, 0],[0, 1]],
              [[-c3, s3],[-s3, -c3]],[[-c3, -s3],[s3, -c3]],[[1, 0],[0, 1]],[[-c3, s3],[-s3, -c3]],[[-c3, -s3],[s3, -c3]],
              [[-1, 0],[0, 1]],[[c3, -s3],[-s3, -c3]],[[c3, s3],[s3, -c3]],[[c3, s3],[s3, -c3]],[[-1, 0],[ 0, 1]],[[c3, -s3],[-s3, -c3]],
              [[-c3, s3],[-s3, -c3]],[[-c3, -s3],[s3, -c3]],[[-c3, s3],[-s3, -c3]],[[-c3, -s3],[s3, -c3]],
              [[-1, 0],[0, 1]],[[c3, -s3],[-s3, -c3]],[[c3, s3],[s3, -c3]],[[c3, s3],[s3, -c3]],[[-1, 0],[ 0, 1]],[[c3, -s3],[-s3, -c3]]]),
    "A1u" : np.array([ [[1]],[[-1]],[[-1]], # E, σh, i
               [[1]], [[1]], [[1]], [[1]], [[1]], # Cns
               [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], # C2s
              [[-1]],[[-1]],[[-1]],[[-1]], # Sns
              [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]), # σs
    "A2u" : np.array([ [[1]],[[-1]],[[-1]], # E, σh, i
               [[1]], [[1]], [[1]], [[1]], [[1]], # Cns
              [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]], # C2s
              [[-1]],[[-1]],[[-1]],[[-1]], # Sns
               [[1]], [[1]], [[1]], [[1]], [[1]], [[1]]]), # σs
    "B1u" : np.array([ [[1]], [[1]],[[-1]],   # E, σh, i
              [[-1]], [[1]],[[-1]], [[1]],[[-1]], # Cns
               [[1]], [[1]], [[1]],[[-1]],[[-1]],[[-1]], # C2s
              [[-1]], [[1]], [[1]],[[-1]], # Sns
               [[1]], [[1]], [[1]],[[-1]],[[-1]],[[-1]]]), # σs
    "B2u" : np.array([ [[1]], [[1]],[[-1]], # E, σh, i
              [[-1]], [[1]],[[-1]], [[1]],[[-1]], # Cns
              [[-1]],[[-1]],[[-1]], [[1]], [[1]], [[1]], # C2s
              [[-1]], [[1]], [[1]],[[-1]], # Sns
              [[-1]],[[-1]],[[-1]], [[1]], [[1]], [[1]]]), # σs
    "E1u" : np.array([[[1, 0],[0, 1]],[[1, 0],[0, 1]],[[-1, 0],[0, -1]],
              [[c3, -s3],[s3, c3]],[[-c3, -s3],[s3, -c3]],[[-1, 0],[0, -1]],[[-c3, s3],[-s3, -c3]],[[c3, s3],[-s3, c3]],
              [[1, 0],[0, -1]],[[-c3, s3],[s3, c3]],[[-c3, -s3],[-s3, c3]],[[c3, s3],[s3, -c3]],[[-1, 0],[0, 1]],[[c3, -s3],[-s3, -c3]],
              [[c3, -s3],[s3, c3]],[[-c3, -s3],[s3, -c3]],[[-c3, s3],[-s3, -c3]],[[c3, s3],[-s3, c3]],
              [[1, 0],[0, -1]],[[-c3, s3],[s3, c3]],[[-c3, -s3],[-s3, c3]],[[c3, s3],[s3, -c3]],[[-1, 0],[0, 1]],[[c3, -s3],[-s3, -c3]]]),
    "E2u" : np.array([[[1, 0],[0, 1]],[[-1, 0],[0, -1]],[[-1, 0],[0, -1]],
              [[-c3, s3],[-s3, -c3]],[[-c3, -s3],[s3, -c3]],[[1, 0],[0, 1]],[[-c3, s3],[-s3, -c3]],[[-c3, -s3],[s3, -c3]],
              [[-1, 0],[0, 1]],[[c3, -s3],[-s3, -c3]],[[c3, s3],[s3, -c3]],[[c3, s3],[s3, -c3]],[[-1, 0],[ 0, 1]],[[c3, -s3],[-s3, -c3]],
              [[c3, -s3],[s3, c3]],[[c3, s3],[-s3, c3]],[[c3, -s3],[s3, c3]],[[c3, s3],[-s3, c3]],
              [[1, 0],[0, -1]],[[-c3, s3],[s3, c3]],[[-c3, -s3],[-s3, c3]],[[-c3, -s3],[-s3, c3]],[[1, 0],[ 0, -1]],[[-c3, s3],[s3, c3]]])
}
irrm_D8h = {
    "A1g" : np.array([[[1]],[[1]],[[1]], # E, σh, i
              [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]], # C8s
              [[1]],[[1]],[[1]],[[1]], # C2'
              [[1]],[[1]],[[1]],[[1]], # C2''
              [[1]],[[1]],[[1]],[[1]],[[1]],[[1]], # S8
              [[1]],[[1]],[[1]],[[1]], # σvs
              [[1]],[[1]],[[1]],[[1]]]), # σds
    "A2g" : np.array([[[1]],[[1]],[[1]],
              [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
              [[-1]],[[-1]],[[-1]],[[-1]],
              [[-1]],[[-1]],[[-1]],[[-1]],
              [[1]],[[1]], [[1]],[[1]],[[1]],[[1]],
              [[-1]],[[-1]],[[-1]],[[-1]],
              [[-1]],[[-1]],[[-1]],[[-1]]]),
    "B1g" : np.array([[[1]],[[1]],[[1]],
              [[-1]],[[1]],[[-1]],[[1]],[[-1]],[[1]],[[-1]],
              [[1]],[[1]],[[1]],[[1]],
              [[-1]],[[-1]],[[-1]],[[-1]],
              [[-1]],[[1]],[[-1]],[[-1]],[[1]],[[-1]],
              [[1]],[[1]],[[1]],[[1]],
              [[-1]],[[-1]],[[-1]],[[-1]]]),
    "B2g" : np.array([[[1]],[[1]],[[1]],
              [[-1]],[[1]],[[-1]],[[1]],[[-1]],[[1]],[[-1]],
              [[-1]],[[-1]],[[-1]],[[-1]],
              [[1]],[[1]],[[1]],[[1]],
              [[-1]],[[1]],[[-1]],[[-1]],[[1]],[[-1]],
              [[-1]],[[-1]],[[-1]],[[-1]],
              [[1]],[[1]],[[1]],[[1]]]),
    "E1g" : np.array([[[1, 0],[0, 1]],[[-1, 0],[0, -1]],[[1, 0],[0, 1]],
              [[c4, -s4],[s4, c4]],[[0, -1],[1, 0]],[[-c4, -s4],[s4, -c4]],[[-1, 0],[0, -1]],[[-c4, s4],[-s4, -c4]],[[0, 1],[-1, 0]],[[c4, s4],[-s4, c4]],
              [[1, 0],[0, -1]],[[0, 1],[1, 0]],[[-1, 0],[0, 1]],[[0, -1],[-1, 0]],
              [[c4, s4],[s4, -c4]],[[-c4, s4],[s4, c4]],[[-c4, -s4],[-s4, c4]],[[c4, -s4],[-s4, -c4]],
              [[-c4, s4],[-s4, -c4]],[[0, 1],[-1, 0]],[[c4, s4],[-s4, c4]],[[c4, -s4],[s4, c4]],[[0, -1],[1, 0]],[[-c4, -s4],[s4, -c4]],
              [[-1, 0],[0, 1]],[[0, -1],[-1, 0]],[[1, 0],[0, -1]],[[0, 1],[1, 0]],
              [[-c4, -s4],[-s4, c4]],[[c4, -s4],[-s4, -c4]],[[c4, s4],[s4, -c4]],[[-c4, s4],[s4, c4]]]),
    "E2g" : np.array([[[1, 0],[0, 1]],[[1, 0],[0, 1]],[[1, 0],[0, 1]],
              [[0, -1],[1, 0]],[[-1, 0],[0, -1]],[[0, 1],[-1, 0]],[[1, 0],[0, 1]],[[0, -1],[1, 0]],[[-1, 0],[0, -1]],[[0, 1],[-1, 0]],
              [[1, 0],[0, -1]],[[-1, 0],[0, 1]],[[1, 0],[0, -1]],[[-1, 0],[0, 1]],
              [[0, 1],[1, 0]],[[0, -1],[-1, 0]],[[0, 1],[1, 0]],[[0, -1],[-1, 0]],
              [[0, -1],[1, 0]],[[-1, 0],[0, -1]],[[0, 1],[-1, 0]],[[0 ,-1],[1, 0]],[[-1, 0],[0, -1]],[[0, 1],[-1, 0]],
              [[1, 0],[0 ,-1]],[[-1, 0],[0, 1]],[[1, 0],[0, -1]],[[-1, 0],[0, 1]],
              [[0, 1],[1, 0]],[[0, -1],[-1, 0]],[[0, 1],[1, 0]],[[0, -1],[-1, 0]]]),
    "E3g" : np.array([[[1, 0],[0, 1]],[[-1, 0],[0, -1]],[[1, 0],[0, 1]],
              [[-c4, s4],[-s4, -c4]],[[0, -1],[1, 0]],[[c4, s4],[-s4, c4]],[[-1, 0],[0, -1]],[[c4, -s4],[s4, c4]],[[0, 1],[-1, 0]],[[-c4, -s4],[s4, -c4]],
              [[-1, 0],[0, 1]],[[0, -1],[-1, 0]],[[1, 0],[0, -1]],[[0, 1],[1, 0]],
              [[c4, s4],[s4, -c4]],[[-c4, s4],[s4, c4]],[[-c4, -s4],[-s4, c4]],[[c4, -s4],[-s4, -c4]],
              [[c4, -s4],[s4, c4]],[[0, 1],[-1, 0]],[[-c4, -s4],[s4, -c4]],[[-c4, s4],[-s4, -c4]],[[0, -1],[1, 0]],[[c4, s4],[-s4, c4]],
              [[1, 0],[0, -1]],[[0, 1],[1, 0]],[[-1, 0],[0, 1]],[[0, -1],[-1, 0]],
              [[-c4, -s4],[-s4, c4]],[[c4, -s4],[-s4, -c4]],[[c4, s4],[s4, -c4]],[[-c4, s4],[s4, c4]]]),
    "A1u" : np.array([[[1]],[[-1]],[[-1]], # E, σh, i
              [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]], # C8s
              [[1]],[[1]],[[1]],[[1]], # C2'
              [[1]],[[1]],[[1]],[[1]], # C2''
              [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]], # S8
              [[-1]],[[-1]],[[-1]],[[-1]], # σvs
              [[-1]],[[-1]],[[-1]],[[-1]]]), # σds
    "A2u" : np.array([[[1]],[[-1]],[[-1]],
              [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
              [[-1]],[[-1]],[[-1]],[[-1]],
              [[-1]],[[-1]],[[-1]],[[-1]],
              [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],
              [[1]],[[1]],[[1]],[[1]],
              [[1]],[[1]],[[1]],[[1]]]),
    "B1u" : np.array([[[1]],[[-1]],[[-1]],
              [[-1]],[[1]],[[-1]],[[1]],[[-1]],[[1]],[[-1]],
              [[1]],[[1]],[[1]],[[1]],
              [[-1]],[[-1]],[[-1]],[[-1]],
              [[1]],[[-1]], [[1]],[[1]],[[-1]],[[1]],
              [[-1]],[[-1]],[[-1]],[[-1]],
              [[1]],[[1]],[[1]],[[1]]]),
    "B2u" : np.array([[[1]],[[-1]],[[-1]],
              [[-1]],[[1]],[[-1]],[[1]],[[-1]],[[1]],[[-1]],
              [[-1]],[[-1]],[[-1]],[[-1]],
              [[1]],[[1]],[[1]],[[1]],
              [[1]],[[-1]],[[1]],[[1]],[[-1]],[[1]],
              [[1]],[[1]],[[1]],[[1]],
              [[-1]],[[-1]],[[-1]],[[-1]]]),
    "E1u" : np.array([[[1, 0],[0, 1]],[[1, 0],[0, 1]],[[-1, 0],[0, -1]],
              [[c4, -s4],[s4, c4]],[[0, -1],[1, 0]],[[-c4, -s4],[s4, -c4]],[[-1, 0],[0, -1]],[[-c4, s4],[-s4, -c4]],[[0, 1],[-1, 0]],[[c4, s4],[-s4, c4]],
              [[1, 0],[0, -1]],[[0, 1],[1, 0]],[[-1, 0],[0, 1]],[[0, -1],[-1, 0]],
              [[c4, s4],[s4, -c4]],[[-c4, s4],[s4, c4]],[[-c4, -s4],[-s4, c4]],[[c4, -s4],[-s4, -c4]],
              [[c4, -s4],[s4, c4]],[[0, -1],[1, 0]],[[-c4, -s4],[s4, -c4]],[[-c4, s4],[-s4, -c4]],[[0, 1],[-1, 0]],[[c4, s4],[-s4, c4]],
              [[1, 0],[0, -1]],[[0 ,1],[1, 0]],[[-1, 0],[0, 1]],[[0, -1],[-1, 0]],
              [[c4, s4],[s4, -c4]],[[-c4, s4],[s4, c4]],[[-c4, -s4],[-s4, c4]],[[c4, -s4],[-s4, -c4]]]),
    "E2u" : np.array([[[1, 0],[0, 1]],[[-1 ,0],[0 ,-1]],[[-1, 0],[0 ,-1]],
              [[ 0,-1],[ 1, 0]],[[-1, 0],[ 0,-1]],[[ 0, 1],[-1, 0]],[[1, 0],[0, 1]],[[0, -1],[1, 0]],[[-1, 0],[0, -1]],[[0, 1],[-1, 0]],
              [[ 1, 0],[ 0,-1]],[[-1, 0],[ 0, 1]],[[ 1, 0],[ 0,-1]],[[-1, 0],[0, 1]],
              [[ 0, 1],[ 1, 0]],[[ 0,-1],[-1, 0]],[[ 0, 1],[ 1, 0]],[[0, -1],[-1, 0]],
              [[ 0, 1],[-1, 0]],[[ 1, 0],[ 0, 1]],[[ 0,-1],[ 1, 0]],[[0, 1],[-1, 0]],[[1, 0],[0, 1]],[[0, -1],[1, 0]],
              [[-1, 0],[ 0, 1]],[[ 1, 0],[ 0,-1]],[[-1, 0],[ 0, 1]],[[1, 0],[0, -1]],
              [[ 0,-1],[-1, 0]],[[ 0, 1],[ 1, 0]],[[ 0,-1],[-1, 0]],[[0, 1],[1, 0]]]),
    "E3u" : np.array([[[1, 0],[0, 1]],[[1, 0],[0, 1]],[[-1, 0],[0, -1]],
              [[-c4, s4],[-s4, -c4]],[[0, -1],[1, 0]],[[c4, s4],[-s4, c4]],[[-1, 0],[0, -1]],[[c4, -s4],[s4, c4]],[[0, 1],[-1, 0]],[[-c4, -s4],[s4, -c4]],
              [[-1, 0],[0, 1]],[[0 ,-1],[-1, 0]],[[1, 0],[0, -1]],[[0, 1],[1, 0]],
              [[c4, s4],[s4, -c4]],[[-c4, s4],[s4, c4]],[[-c4, -s4],[-s4, c4]],[[c4, -s4],[-s4, -c4]],
              [[-c4, s4],[-s4, -c4]],[[0, -1],[1, 0]],[[c4, s4],[-s4, c4]],[[c4, -s4],[s4, c4]],[[0, 1],[-1, 0]],[[-c4, -s4],[s4, -c4]],
              [[-1, 0],[0, 1]],[[0, -1],[-1, 0]],[[1, 0],[0, -1]],[[0, 1],[1, 0]],
              [[c4, s4],[s4, -c4]],[[-c4, s4],[s4, c4]],[[-c4, -s4],[-s4, c4]],[[c4, -s4],[-s4, -c4]]])
}

irrm_D2d = {
    "A1" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "A2" : np.array([[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "B1" : np.array([[[1]],[[1]],[[-1]],[[-1]],[[1]],[[1]],[[-1]],[[-1]]]),
    "B2" : np.array([[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[1]],[[1]]]),
    "E"  : np.array([[[1, 0],[0, 1]],[[-1, 0],[0, -1]],[[0, -1],[1, 0]],[[0, 1],[-1, 0]],[[1, 0],[0, -1]],[[-1, 0],[0, 1]],[[0, 1],[1, 0]],[[0, -1],[-1, 0]]])
}
irrm_D3d = {
    "A1g" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "A2g" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "Eg"  : np.array([[[1, 0],[0, 1]],[[1, 0],[0, 1]],[[-c3, -s3],[s3, -c3]],[[-c3, s3],[-s3, -c3]],[[-c3, s3],[-s3, -c3]],[[-c3, -s3],[s3, -c3]],
              [[1, 0],[0, -1]],[[-c3, -s3],[-s3, c3]],[[-c3, s3],[s3, c3]],[[-c3, -s3],[-s3, c3]],[[1, 0],[0, -1]],[[-c3, s3],[s3, c3]]]),
    "A1u" : np.array([[[1]],[[-1]],[[1]],[[1]],[[-1]],[[-1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]]]),
    "A2u" : np.array([[[1]],[[-1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[1]],[[1]],[[1]]]),
    "Eu"  : np.array([[[1, 0],[0, 1]],[[-1, 0],[0, -1]],[[-c3, -s3],[s3, -c3]],[[-c3, s3],[-s3, -c3]],[[c3, -s3],[s3, c3]],[[c3, s3],[-s3, c3]],
              [[1, 0],[0, -1]],[[-c3, -s3],[-s3, c3]],[[-c3, s3],[s3, c3]],[[c3, s3],[s3, -c3]],[[-1, 0],[0, 1]],[[c3, -s3],[-s3, -c3]]])
}
irrm_D4d = {
    "A1" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]], [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "A2" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "B1" : np.array([[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "B2" : np.array([[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[1]],[[1]],[[1]],[[1]]]),
    "E1" : np.array([[[1, 0],[0, 1]],[[0, -1],[1, 0]],[[-1, 0],[0, -1]],[[0, 1],[-1, 0]],[[c4, -s4],[s4, c4]],[[-c4, -s4],[s4, -c4]],[[-c4, s4],[-s4, -c4]],[[c4, s4],[-s4, c4]],
             [[1, 0],[0, -1]],[[-1, 0],[0, 1]],[[0, 1],[1, 0]],[[0, -1],[-1, 0]],[[c4, s4],[s4, -c4]],[[-c4, s4],[s4, c4]],[[-c4, -s4],[-s4, c4]],[[c4, -s4],[-s4, -c4]]]),
    "E2" : np.array([[[1, 0],[0, 1]],[[-1, 0],[0, -1]],[[1, 0],[0, 1]],[[-1, 0],[0, -1]],[[0, -1],[1, 0]],[[0, 1],[-1, 0]],[[0, -1],[1, 0]],[[0, 1],[-1, 0]],
             [[1, 0],[0, -1]],[[1, 0],[0, -1]],[[-1, 0],[0, 1]],[[-1, 0],[0, 1]],[[0, 1],[1, 0]],[[0, -1],[-1, 0]],[[0, 1],[1, 0]],[[0, -1],[-1, 0]]]),
    "E3" : np.array([[[1, 0],[0, 1]],[[0, -1],[1 ,0]],[[-1, 0],[0, -1]],[[0, 1],[-1, 0]],[[-c4, s4],[-s4, -c4]],[[c4, s4],[-s4, c4]],[[c4, -s4],[s4, c4]],[[-c4, -s4],[s4 , -c4]],
             [[1, 0],[0, -1]],[[-1, 0],[0, 1]],[[0, 1],[1, 0]],[[0, -1],[-1, 0]],[[-c4, -s4],[-s4, c4]],[[c4, -s4],[-s4 ,-c4]],[[c4, s4],[s4, -c4]],[[-c4, s4],[s4, c4]]])
}
irrm_D5d = {
    "A1g" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
              [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "A2g" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
              [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "E1g" : np.array([[[1, 0],[0, 1]],[[1, 0],[0, 1]],
             [[c25, -s25],[ s25, c25]],[[-c5 ,-s5],[ s5, -c5]],[[-c5, s5],[ -s5 ,-c5]],[[c25, s25],[ -s25, c25]], # C_5s
             [[-c5, s5],[ -s5, -c5]],[[c25, s25],[ -s25, c25]],[[c25, -s25],[ s25, c25]],[[-c5, -s5],[ s5, -c5]], # S_10s
             [[1, 0],[0, -1]],[[-c5, s5],[ s5, c5]],[[c25, -s25],[ -s25, -c25]],[[c25, s25],[ s25, -c25]],[[-c5, -s5],[ -s5, c5]], # C_2s
             [[-c5, -s5],[ -s5, c5]],[[c25, -s25],[ -s25, -c25]],[[1, 0],[0, -1]],[[c25, s25],[ s25 ,-c25]],[[-c5, s5],[ s5, c5]]]), # σds
    "E2g" : np.array([[[1, 0],[0, 1]],[[1 ,0],[0, 1]],
             [[-c5, -s5],[ s5, -c5]],[[c25, s25],[ -s25, c25]],[[c25, -s25],[ s25, c25]],[[-c5, s5],[ -s5, -c5]],
             [[c25, -s25],[ s25, c25]],[[-c5, s5],[ -s5, -c5]],[[-c5, -s5],[ s5, -c5]],[[c25, s25],[ -s25, c25]],
             [[1, 0],[0 ,-1]],[[c25, -s25],[ -s25 ,-c25]],[[-c5, -s5],[ -s5, c5]],[[-c5, s5],[ s5, c5]],[[c25, s25],[ s25, -c25]],
             [[c25, s25],[ s25, -c25]],[[-c5, -s5],[ -s5, c5]],[[1, 0],[0, -1]],[[-c5, s5],[ s5, c5]],[[c25, -s25],[ -s25, -c25]]]),
    "A1u" : np.array([[[1]],[[-1]],[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],
              [[1]],[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "A2u" : np.array([[[1]],[[-1]],[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],
              [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "E1u" : np.array([[[1,  0],[0 , 1]],[[-1,  0],[0 , -1]],[[c25 ,-s25],[ s25, c25]],[[-c5, -s5],[ s5 ,-c5]],[[-c5 ,s5],[ -s5  ,-c5]],
             [[c25 ,s25],[ -s25,  c25]],[ [c5 ,-s5],[ s5   ,  c5]],[[-c25, -s25],[ s25, -c25]],[[-c25, s25],[ -s25, -c25]],
             [[c5  , s5   ],[ -s5 ,c5  ]], [[1,  0],[0, -1]],[[-c5, s5 ],[ s5  ,   c5]],[[c25, -s25],[ -s25, -c25]],
             [[c25 ,s25],[ s25 ,-c25]],[[-c5, -s5],[ -s5, c5]], [[c5  ,   s5],[ s5  ,-c5]],[[-c25, s25],[ s25, c25]],
             [[-1, 0],[0, 1]],[[-c25, -s25],[ -s25, c25]],[[c5  ,-s5],[ -s5 ,-c5]]]), # σds
    "E2u" : np.array([[[1,  0],[0 , 1]],[[-1,  0],[0,  -1]], [[-c5, -s5],[ s5 ,-c5]],[[c25 ,s25],[ -s25, c25]],[[c25, -s25],[s25, c25]],
    [[-c5, s5],[ -s5 , -c5]], [[-c25, s25],[ -s25, -c25]],[[c5 ,-s5],  [ s5 , c5  ]],[[c5  , s5],[ -s5  ,   c5]],
    [[-c25,  -s25],[ s25 ,-c25]], [[1,  0],[0, -1]],[[c25, -s25],[-s25, -c25]],[[-c5, -s5],[ -s5  ,c5   ]],
    [[-c5 ,s5],[ s5, c5]],[[c25 ,s25],[ s25 ,-c25]],[[-c25, -s25],[ -s25, c25]],[[c5 ,s5],[ s5   , -c5]],[[-1, 0],[0, 1]],
    [[c5  ,  -s5],[ -s5 , -c5]],[[-c25, s25],[ s25, c25]]])
}
irrm_D6d = {
    "A1" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
             [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "A2" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
             [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "B1" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],
             [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "B2" : np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],
             [[-1]],[[-1]],[[-1]],[[-1]], [[-1]],[[-1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "E1" : np.array([[[1,  0],[0, 1]],[[c3, -s3],[s3, c3]],[[-c3, -s3],[s3, -c3]],[[-1, 0],[0 ,-1]],[[-c3, s3],[-s3, -c3]],[[c3, s3],[-s3, c3]],
             [[s3, -c3],[c3, s3]],[[0, -1],[1, 0]],[[-s3, -c3],[c3, -s3]],[[-s3, c3],[-c3, -s3]],[[0 , 1],[-1, 0]],[[s3, c3],[-c3, s3]],
             [[1, 0],[0, -1]],[[-c3, s3],[s3 ,c3]],[[-c3, -s3],[-s3, c3]],[[c3, s3],[s3, -c3]],[[-1, 0],[0 ,1]],[[c3, -s3],[-s3, -c3]],
             [[s3, c3],[c3 ,-s3]],[[0, 1],[1, 0]],[[-s3, c3],[c3, s3]],[[-s3, -c3],[-c3, s3]],[[0 ,-1],[-1, 0]],[[s3, -c3],[-c3, -s3]]]),
    "E2" : np.array([[[1, 0],[0, 1]],[[-c3, -s3],[s3 ,-c3]],[[-c3, s3],[-s3 ,-c3]],[[1, 0],[0, 1]],[[-c3, -s3],[s3, -c3]],[[-c3, s3],[-s3, -c3]],
             [[c3, -s3],[s3, c3]],[[-1, 0],[0, -1]],[[c3, s3],[-s3, c3]],[[c3, -s3],[s3, c3]],[[-1, 0],[0, -1]],[[c3, s3],[-s3, c3]],
             [[1, 0],[0, -1]],[[-c3, -s3],[-s3, c3]],[[-c3, s3],[s3, c3]],[[-c3, s3],[s3, c3]],[[1, 0],[0, -1]],[[-c3, -s3],[-s3, c3]],
             [[c3, s3],[s3, -c3]],[[-1, 0],[0, 1]],[[c3, -s3],[-s3, -c3]],[[c3, s3],[s3, -c3]],[[-1, 0],[0 ,1]],[[c3, -s3],[-s3, -c3]]]),
    "E3" : np.array([[[1, 0],[0, 1]],[[-1, 0],[0, -1]],[[1, 0],[0, 1]],[[-1, 0],[0, -1]],[[1, 0],[0, 1]],[[-1, 0],[0, -1]],
             [[0, 1],[-1, 0]],[[0 ,-1],[1, 0]],[[0 ,1],[-1, 0]],[[0, -1],[1, 0]],[[0, 1],[-1, 0]],[[0 ,-1],[1, 0]],
             [[-1, 0],[0, 1]],[[-1, 0],[0 ,1 ]],[[-1, 0],[0, 1]],[[1, 0],[0 ,-1]],[[1, 0],[0 ,-1]],[[1 ,0],[0  ,-1]],
             [[0 ,1],[1 ,0]],[[0  ,-1],[-1, 0]],[[0 ,1],[1 ,0]],[[0 ,-1],[-1, 0]],[[0, 1],[1 ,0]], [[0 ,-1],[-1, 0]]]),
    "E4" : np.array([[[1, 0],[0, 1]],[[-c3, -s3],[s3, -c3]],[[-c3, s3],[-s3, -c3]],[[1, 0],[0, 1]],[[-c3, -s3],[s3 ,-c3]],[[-c3, s3],[-s3 ,-c3]],
             [[-c3, s3],[-s3, -c3]],[[1, 0],[0, 1]],[[-c3, -s3],[s3, -c3]],[[-c3, s3],[-s3, -c3]],[[1, 0],[0, 1]],[[-c3, -s3],[s3, -c3]],
             [[-1 ,0],[0, 1]],[[c3, s3],[s3, -c3]],[[c3, -s3],[-s3 ,-c3]],[[c3, -s3],[-s3, -c3]],[[-1, 0],[0, 1]],[[c3, s3],[s3, -c3]],
             [[c3 ,s3],[s3, -c3]],[[-1, 0],[0, 1]],[[c3, -s3],[-s3, -c3]],[[c3, s3],[s3, -c3]],[[-1, 0],[0, 1]],[[c3, -s3],[-s3, -c3]]]),
    "E5" : np.array([[[1, 0],[0, 1]],[[c3, -s3],[s3 ,c3]],[[-c3, -s3],[s3, -c3]],[[-1, 0],[0, -1]],[[-c3, s3],[-s3, -c3]],[[c3, s3],[-s3 ,c3]],
             [[-s3, c3],[-c3, -s3]],[[0, 1],[-1, 0]],[[s3, c3],[-c3 ,s3]],[[s3, -c3],[c3, s3]],[[0, -1],[1, 0]],[[-s3, -c3],[c3, -s3]],
             [[-1, 0],[0, 1]],[[c3, -s3],[-s3, -c3]],[[c3, s3],[s3, -c3]],[[-c3, -s3],[-s3, c3]],[[1, 0],[0, -1]],[[-c3, s3],[s3 ,c3]],
             [[s3, c3],[c3, -s3]],[[0, 1],[1 ,0]],[[-s3, c3],[c3, s3]],[[-s3, -c3],[-c3, s3]],[[0, -1],[-1, 0]],[[s3, -c3],[-c3, -s3]]])
             
}

irrm_T = {
    "A"   :  np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "E(1)" :  np.array([[[1]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[1]],[[1]],[[1]]]),
    "E(2)" :  np.array([[[1]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[1]],[[1]],[[1]]]),
    "T"   :  np.array([[[1, 0,0],[0, 1, 0],[0, 0, 1]],[[0, 0, 1],[1, 0, 0],[0, 1, 0]],[[0, 1, 0],[0, 0, 1],[1, 0, 0]],[[0, 0, 1],[-1, 0, 0],[0, -1, 0]],[[0, -1, 0],[0, 0, -1],[1, 0, 0]],
              [[0, 0, -1],[1, 0, 0],[0, -1, 0]],[[0 ,1 ,0],[0 ,0 ,-1],[-1, 0, 0]],[[0 ,0 ,-1],[-1, 0, 0],[0, 1, 0]],[[0, -1, 0],[0, 0, 1],[-1, 0, 0]],
              [[1, 0, 0],[0 ,-1, 0],[0, 0 ,-1]],[[-1, 0, 0],[0, 1, 0],[0 ,0 ,-1]],[[-1, 0, 0],[0 ,-1, 0],[0, 0, 1]]])
        }
irrm_Th = {
    "A_g"  :  np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
              [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "E_g(1)" :  np.array([[[1]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[1]],[[1]],[[1]],
              [[1]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[1]],[[1]],[[1]]]),
    "E_g(2)" :  np.array([[[1]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[1]],[[1]],[[1]],
              [[1]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[1]],[[1]],[[1]]]),
    "T_g"  :  np.array([[[1, 0, 0], [0, 1 ,0], [0 ,0 ,1]], [[0 ,0 ,1],[1 ,0 ,0], [0 ,1 ,0]],[[0 ,1, 0],[0, 0, 1],[1 ,0, 0]],[[0, 0, 1],[-1, 0, 0],[0, -1, 0]],[[0, -1, 0],[0, 0, -1],[1, 0, 0]],
              [[0, 0, -1],[1, 0 ,0], [0 ,-1, 0]],[[0 ,1 ,0],[0 ,0 ,-1],[-1, 0, 0]],[[0, 0, -1],[-1, 0, 0],[0 ,1, 0]],[[0, -1 ,0],[0, 0, 1],[-1, 0, 0]],
              [[1, 0, 0], [0, -1, 0],[0, 0 ,-1]],[[-1, 0, 0],[0, 1, 0],[0 ,0 ,-1]],[[-1, 0, 0],[0, -1, 0],[0, 0, 1]],
              [[1, 0, 0], [0, 1 ,0], [0 ,0 ,1]], [[0 ,1 ,0],[0 ,0 ,1], [1 ,0 ,0]],[[0 ,0, 1],[1, 0, 0],[0, 1, 0]],[[0, -1, 0],[0, 0, -1],[1, 0, 0]],[[0, 0, 1],[-1, 0, 0],[0, -1, 0]],
              [[0, 1, 0], [0, 0 ,-1],[-1, 0, 0]],[[0 ,0 ,-1],[1, 0, 0],[0 ,-1, 0]],[[0, -1, 0],[0, 0, 1],[-1, 0, 0]],[[0, 0, -1],[-1, 0, 0],[0, 1, 0]],
              [[1, 0, 0], [0, -1, 0],[0, 0 ,-1]],[[-1, 0, 0],[0, 1, 0],[0 ,0 ,-1]],[[-1, 0, 0],[0, -1, 0],[0, 0, 1]]]),
    "A_u"  :  np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
              [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "E_u(1)" :  np.array([[[1]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[1]],[[1]],[[1]],
              [[-1]],[[-ce3]],[[-e3]],[[-ce3]],[[-e3]],[[-ce3]],[[-e3]],[[-ce3]],[[-e3]],[[-1]],[[-1]],[[-1]]]),
    "E_u(2)" :  np.array([[[1]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[ce3]],[[e3]],[[1]],[[1]],[[1]],
              [[-1]],[[-e3]],[[-ce3]],[[-e3]],[[-ce3]],[[-e3]],[[-ce3]],[[-e3]],[[-ce3]],[[-1]],[[-1]],[[-1]]]),
    "T_u"  :  np.array([[[1, 0, 0],[0, 1, 0],[0, 0 ,1]],[[0, 0, 1],[1, 0, 0],[0, 1, 0]],[[0, 1, 0],[0, 0, 1],[1, 0, 0]],[[0, 0, 1],[-1, 0, 0],[0, -1, 0]],[[0, -1, 0],[0, 0, -1],[1, 0, 0]],
              [[0, 0, -1],[1, 0, 0],[0, -1, 0]],[[0, 1, 0],[0, 0, -1],[-1, 0, 0]],[[0, 0, -1],[-1, 0, 0],[0, 1, 0]],[[0, -1, 0],[0, 0, 1],[-1, 0, 0]],
              [[1 ,0 ,0],[0 ,-1 ,0],[0 ,0 ,-1]],[[-1, 0 ,0],[0, 1, 0],[0, 0, -1]],[[-1, 0, 0],[0, -1, 0],[0, 0, 1]],
              [[-1, 0, 0],[0, -1, 0],[0, 0, -1]],[[0, -1, 0],[0, 0, -1],[-1, 0, 0]],[[0, 0, -1],[-1, 0, 0],[0, -1, 0]],[[0, 1, 0],[0, 0, 1],[-1, 0, 0]],[[0, 0 ,-1],[1, 0, 0],[0, 1, 0]],
              [[0 ,-1, 0],[0, 0 ,1],[1 ,0 ,0]],[[0 ,0 ,1],[-1, 0, 0],[0, 1, 0]],[[0, 1, 0],[0, 0, -1],[1, 0, 0]],[[0, 0, 1],[1, 0, 0],[0, -1, 0]],
              [[-1, 0, 0],[0, 1 ,0],[0 ,0 ,1]],[[1 ,0 ,0],[0, -1, 0],[0, 0, 1]],[[1, 0, 0],[0, 1, 0],[0, 0, -1]]])}
irrm_Td  = {
    "A_1" :  np.array([ [[1]], # E
              [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], # C3
              [[1]], [[1]], [[1]], # C2
              [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], # σd
              [[1]], [[1]], [[1]], [[1]], [[1]], [[1]]]), # S4
    "A_2" :  np.array([ [[1]], 
              [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]], 
              [[1]], [[1]], [[1]], 
              [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],
              [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "E"  :  np.array([[[1,  0],[0, 1]],
             [[-c3, -s3],[ s3, -c3]],[[-c3, s3],[ -s3, -c3]],[[-c3, -s3],[ s3, -c3]],[[-c3, s3],[ -s3, -c3]],[[-c3, -s3],[ s3, -c3]],[[-c3, s3],[ -s3, -c3]],[[-c3, -s3],[ s3, -c3]],[[-c3, s3],[ -s3, -c3]],
             [[1, 0],[0, 1]],[[1, 0],[0, 1]],[[1, 0],[0, 1]],
             [[1, 0],[ 0, -1]],[[1, 0],[ 0, -1]],[[-c3, s3],[ s3, c3]],[[-c3, s3],[ s3, c3]],[[-c3, -s3],[ -s3, c3]],[[-c3, -s3],[ -s3, c3]],
             [[-c3, -s3],[ -s3, c3]],[[-c3, -s3],[ -s3, c3]],[[-c3, s3],[ s3, c3]],[[-c3, s3],[ s3, c3]],[[1, 0],[0, -1]],[[1, 0],[0, -1]]]),
    "T_1" :  np.array([[[1, 0 ,0],[0 ,1, 0],[0, 0, 1]], # E
             [[0, 0 ,1],[1 ,0, 0],[0, 1, 0]],[[0, 1, 0],[0, 0, 1],[1, 0, 0]],[[0, 0, 1],[-1, 0, 0],[0, -1, 0]],[[0, -1, 0],[0, 0, -1],[1, 0, 0]], # C3 (α,β}
             [[0, 0 ,-1],[1, 0, 0],[0, -1, 0]],[[0, 1, 0],[0, 0, -1],[-1, 0, 0]],[[0, 0, -1],[-1, 0, 0],[0, 1, 0]],[[0, -1, 0],[0, 0, 1],[-1, 0, 0]], # C3 (γ,δ}
             [[1, 0 ,0],[0, -1, 0],[0, 0, -1]],[[-1, 0, 0],[0, 1, 0],[0, 0, -1]],[[-1, 0, 0],[0, -1, 0],[0, 0, 1]], # C2 (x,y,z}
             [[0, 1, 0],[1, 0, 0],[0, 0, -1]],[[0, -1, 0],[-1, 0, 0],[0, 0, -1]],[[0 ,0 ,1],[0, -1, 0],[1, 0, 0]],[[0, 0, -1],[0, -1, 0],[-1, 0, 0]],[[-1, 0, 0],[0, 0, 1],[0, 1, 0]],[[-1, 0, 0],[0, 0, -1],[0, -1, 0]], # σd (xy,xz,yz}
             [[1, 0 ,0],[0, 0, 1],[0, -1, 0]],[[1, 0, 0],[0, 0, -1],[0, 1, 0]],[[0, 0, -1],[0, 1, 0],[1, 0, 0]],[[0, 0, 1],[0, 1, 0],[-1, 0, 0]],[[0, 1, 0],[-1, 0, 0],[0, 0, 1]],[[0, -1, 0],[1, 0, 0],[0, 0, 1]]]), # S4 (x,y,z}
    "T_2" :  np.array([[[1, 0 ,0],[0 ,1, 0],[0, 0 ,1]], # E
             [[0, 0 ,1],[1 ,0, 0],[0, 1, 0]],[[0, 1, 0],[0, 0, 1],[1, 0, 0]],[[0, 0, 1],[-1, 0, 0],[0, -1, 0]],[[0, -1, 0],[0, 0, -1],[1, 0, 0]], # C3 (α,β}
             [[0, 0 ,-1],[1, 0, 0],[0, -1, 0]],[[0, 1, 0],[0, 0, -1],[-1, 0, 0]],[[0, 0, -1],[-1, 0, 0],[0, 1, 0]],[[0, -1, 0],[0, 0, 1],[-1, 0, 0]], # C3 (γ,δ}
             [[1, 0 ,0],[0, -1, 0],[0, 0, -1]],[[-1, 0, 0],[0, 1, 0],[0, 0, -1]],[[-1, 0, 0],[0, -1, 0],[0, 0, 1]], # C2 (x,y,z}
             [[0, -1, 0],[-1, 0, 0],[0, 0, 1]],[[0, 1, 0],[1, 0, 0],[0, 0, 1]],[[0, 0, -1],[0, 1, 0],[-1, 0, 0]],[[0, 0, 1],[0, 1, 0],[1, 0, 0]],[[1, 0, 0],[0, 0, -1],[0, -1, 0]],[[1, 0, 0],[0, 0, 1],[0, 1, 0]], # σd (xy,xz,yz}
             [[-1, 0, 0],[0 ,0 ,-1],[0, 1, 0]],[[-1, 0, 0],[0, 0, 1],[0, -1, 0]],[[0, 0, 1],[0, -1, 0],[-1, 0, 0]],[[0, 0, -1],[0, -1, 0],[1, 0, 0]],[[0, -1, 0],[1, 0, 0],[0, 0, -1]],[[0, 1, 0],[-1, 0, 0],[0, 0, -1]]])
             } # S4 (x,y,z}

irrm_O = {
	"A_1":np.array([[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]]]),
	"A_2":np.array([[[1.0]],[[-1.0]],[[1.0]],[[-1.0]],[[-1.0]],[[1.0]],[[-1.0]],[[-1.0]],[[1.0]],[[-1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[1.0]],[[-1.0]],[[-1.0]],[[-1.0]],[[-1.0]],[[-1.0]],[[-1.0]]]),
	"E":np.array([[[1.0,0.0],[0.0,1.0]],[[-0.5,-0.8660254037844386],[-0.8660254037844386,0.5]],[[1.0,0.0],[0.0,1.0]],[[-0.5,-0.8660254037844386],[-0.8660254037844386,0.5]],[[-0.5,0.8660254037844386],[0.8660254037844386,0.5]],[[1.0,0.0],[0.0,1.0]],[[-0.5,0.8660254037844386],[0.8660254037844386,0.5]],[[1.0,0.0],[0.0,-1.0]],[[1.0,0.0],[0.0,1.0]],[[1.0,0.0],[0.0,-1.0]],[[-0.5,-0.8660254037844386],[0.8660254037844386,-0.5]],[[-0.5,0.8660254037844386],[-0.8660254037844386,-0.5]],[[-0.5,0.8660254037844386],[-0.8660254037844386,-0.5]],[[-0.5,-0.8660254037844386],[0.8660254037844386,-0.5]],[[-0.5,0.8660254037844386],[-0.8660254037844386,-0.5]],[[-0.5,-0.8660254037844386],[0.8660254037844386,-0.5]],[[-0.5,-0.8660254037844386],[0.8660254037844386,-0.5]],[[-0.5,0.8660254037844386],[-0.8660254037844386,-0.5]],[[-0.5,0.8660254037844386],[0.8660254037844386,0.5]],[[-0.5,0.8660254037844386],[0.8660254037844386,0.5]],[[1.0,0.0],[0.0,-1.0]],[[1.0,0.0],[0.0,-1.0]],[[-0.5,-0.8660254037844386],[-0.8660254037844386,0.5]],[[-0.5,-0.8660254037844386],[-0.8660254037844386,0.5]]]),
	"T_1":np.array([[[1.0,0.0,0.0],[0.0,1.0,0.0],[0.0,0.0,1.0]],[[1.0,0.0,0.0],[0.0,0.0,-1.0],[0.0,1.0,0.0]],[[1.0,0.0,0.0],[0.0,-1.0,0.0],[0.0,0.0,-1.0]],[[1.0,0.0,0.0],[0.0,0.0,1.0],[0.0,-1.0,0.0]],[[0.0,0.0,1.0],[0.0,1.0,0.0],[-1.0,0.0,0.0]],[[-1.0,0.0,0.0],[0.0,1.0,0.0],[0.0,0.0,-1.0]],[[0.0,0.0,-1.0],[0.0,1.0,0.0],[1.0,0.0,0.0]],[[0.0,-1.0,0.0],[1.0,0.0,0.0],[0.0,0.0,1.0]],[[-1.0,0.0,0.0],[0.0,-1.0,0.0],[0.0,0.0,1.0]],[[0.0,1.0,0.0],[-1.0,0.0,0.0],[0.0,0.0,1.0]],[[0.0,0.0,1.0],[1.0,0.0,0.0],[0.0,1.0,0.0]],[[0.0,1.0,0.0],[0.0,0.0,1.0],[1.0,0.0,0.0]],[[0.0,-1.0,0.0],[0.0,0.0,-1.0],[1.0,0.0,0.0]],[[0.0,0.0,1.0],[-1.0,0.0,0.0],[0.0,-1.0,0.0]],[[0.0,1.0,0.0],[0.0,0.0,-1.0],[-1.0,0.0,0.0]],[[0.0,0.0,-1.0],[1.0,0.0,0.0],[0.0,-1.0,0.0]],[[0.0,0.0,-1.0],[-1.0,0.0,0.0],[0.0,1.0,0.0]],[[0.0,-1.0,0.0],[0.0,0.0,1.0],[-1.0,0.0,0.0]],[[0.0,0.0,1.0],[0.0,-1.0,0.0],[1.0,0.0,0.0]],[[0.0,0.0,-1.0],[0.0,-1.0,0.0],[-1.0,0.0,0.0]],[[0.0,1.0,0.0],[1.0,0.0,0.0],[0.0,0.0,-1.0]],[[0.0,-1.0,0.0],[-1.0,0.0,0.0],[0.0,0.0,-1.0]],[[-1.0,0.0,0.0],[0.0,0.0,1.0],[0.0,1.0,0.0]],[[-1.0,0.0,0.0],[0.0,0.0,-1.0],[0.0,-1.0,0.0]]]),
	"T_2":np.array([[[1.0,0.0,0.0],[0.0,1.0,0.0],[0.0,0.0,1.0]],[[-1.0,0.0,0.0],[0.0,0.0,1.0],[0.0,-1.0,0.0]],[[1.0,0.0,0.0],[0.0,-1.0,0.0],[0.0,0.0,-1.0]],[[-1.0,0.0,0.0],[0.0,0.0,-1.0],[0.0,1.0,0.0]],[[0.0,0.0,-1.0],[0.0,-1.0,0.0],[1.0,0.0,0.0]],[[-1.0,0.0,0.0],[0.0,1.0,0.0],[0.0,0.0,-1.0]],[[0.0,0.0,1.0],[0.0,-1.0,0.0],[-1.0,0.0,0.0]],[[0.0,1.0,0.0],[-1.0,0.0,0.0],[0.0,0.0,-1.0]],[[-1.0,0.0,0.0],[0.0,-1.0,0.0],[0.0,0.0,1.0]],[[0.0,-1.0,0.0],[1.0,0.0,0.0],[0.0,0.0,-1.0]],[[0.0,0.0,1.0],[1.0,0.0,0.0],[0.0,1.0,0.0]],[[0.0,1.0,0.0],[0.0,0.0,1.0],[1.0,0.0,0.0]],[[0.0,-1.0,0.0],[0.0,0.0,-1.0],[1.0,0.0,0.0]],[[0.0,0.0,1.0],[-1.0,0.0,0.0],[0.0,-1.0,0.0]],[[0.0,1.0,0.0],[0.0,0.0,-1.0],[-1.0,0.0,0.0]],[[0.0,0.0,-1.0],[1.0,0.0,0.0],[0.0,-1.0,0.0]],[[0.0,0.0,-1.0],[-1.0,0.0,0.0],[0.0,1.0,0.0]],[[0.0,-1.0,0.0],[0.0,0.0,1.0],[-1.0,0.0,0.0]],[[0.0,0.0,-1.0],[0.0,1.0,0.0],[-1.0,0.0,0.0]],[[0.0,0.0,1.0],[0.0,1.0,0.0],[1.0,0.0,0.0]],[[0.0,-1.0,0.0],[-1.0,0.0,0.0],[0.0,0.0,1.0]],[[0.0,1.0,0.0],[1.0,0.0,0.0],[0.0,0.0,1.0]],[[1.0,0.0,0.0],[0.0,0.0,-1.0],[0.0,-1.0,0.0]],[[1.0,0.0,0.0],[0.0,0.0,1.0],[0.0,1.0,0.0]]])
}
irrm_Oh = {
    "A_1g": np.array(
        [[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
         [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
         [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
         [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
         [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
         [[1]],[[1]],[[1]],[[1]],[[1]],[[1]]]),
    "A_2g": np.array([[[1]],[[-1]], [[1]],[[-1]],[[-1]], [[1]],[[-1]],[[-1]], [[1]],[[-1]], [[1]], [[1]],
                     [[1]], [[1]], [[1]], [[1]], [[1]], [[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],
                     [[1]],[[-1]], [[1]],[[-1]],[[-1]], [[1]],[[-1]],[[-1]], [[1]],[[-1]], [[1]], [[1]],
                     [[1]], [[1]], [[1]], [[1]], [[1]], [[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "E_g": np.array([[[1, 0],[0, 1]], # Do like dis, no reordering of elements needed
            [[-c3, -s3],[-s3, c3]],[[1, 0],[0, 1]],[[-c3, -s3],[-s3, c3]],
            [[-c3, s3],[s3, c3]],[[1, 0],[0, 1]],[[-c3, s3],[s3, c3]],
            [[1, 0],[0, -1]],[[1, 0],[0, 1]],[[1, 0],[0, -1]],
            [[-c3, -s3],[s3, -c3]],[[-c3, s3],[-s3, -c3]],[[-c3, s3],[-s3, -c3]],[[-c3, -s3],[s3, -c3]],[[-c3, s3],[-s3, -c3]],[[-c3, -s3],[s3, -c3]],[[-c3, -s3],[s3, -c3]],[[-c3, s3],[-s3, -c3]],
            [[-c3, s3],[s3, c3]],[[-c3, s3],[s3, c3]],[[1, 0],[0, -1]],[[1, 0],[0, -1]],[[-c3, -s3],[-s3, c3]],[[-c3, -s3],[-s3, c3]],
            [[1, 0],[0, 1]],
            [[-c3, -s3],[-s3, c3]],[[1, 0],[0, 1]],[[-c3, -s3],[-s3, c3]],
            [[-c3, s3],[s3, c3]],[[1, 0],[0, 1]],[[-c3, s3],[s3, c3]],
            [[1, 0],[0, -1]],[[1, 0],[0, 1]],[[1, 0],[0, -1]],
            [[-c3, s3],[-s3, -c3]],[[-c3, -s3],[s3, -c3]],[[-c3, -s3],[s3, -c3]],[[-c3, s3],[-s3, -c3]],[[-c3, -s3],[s3, -c3]],[[-c3, s3],[-s3, -c3]],[[-c3, s3],[-s3, -c3]],[[-c3, -s3],[s3, -c3]],
            [[-c3, s3],[s3, c3]],[[-c3, s3],[s3, c3]],[[1, 0],[0, -1]],[[1, 0],[0, -1]],[[-c3, -s3],[-s3, c3]],[[-c3, -s3],[-s3, c3]]]),
    "T_1g": np.array(
    	   [[[1,  0, 0],[0,  1,  0],[ 0, 0, 1]],[[ 1, 0,  0],[0,  0, -1],[ 0,  1,  0]],[[1,  0,  0],[ 0, -1,  0],[0, 0, -1]],[[1, 0, 0],[0, 0, 1],[0, -1, 0]],
            [[0,  0, 1],[0,  1,  0],[-1, 0, 0]],[[-1, 0,  0],[0,  1,  0],[ 0,  0, -1]],[[0,  0, -1],[ 0,  1,  0],[1, 0,  0]],
            [[0, -1, 0],[1,  0,  0],[ 0, 0, 1]],[[-1, 0,  0],[0, -1,  0],[ 0,  0,  1]],[[0,  1,  0],[-1,  0,  0],[0, 0,  1]],
            [[0,  0, 1],[1,  0,  0],[ 0, 1, 0]],[[ 0, 1,  0],[0,  0,  1],[ 1,  0,  0]],[[0, -1,  0],[ 0,  0, -1],[1, 0,  0]],[[0,  0,  1],[-1, 0,  0],[ 0, -1,  0]],
            [[0,  1, 0],[0,  0, -1],[-1, 0, 0]],[[ 0, 0, -1],[1,  0,  0],[ 0, -1,  0]],[[0,  0, -1],[-1,  0,  0],[0, 1,  0]],[[0, -1,  0],[ 0, 0,  1],[-1,  0,  0]],
            [[0,  0, 1],[0, -1,  0],[ 1, 0, 0]],[[ 0, 0, -1],[0, -1,  0],[-1,  0,  0]],[[0,  1,  0],[ 1,  0,  0],[0, 0, -1]],[[0, -1,  0],[-1, 0,  0],[ 0,  0, -1]],[[-1, 0, 0],[0, 0, 1],[0, 1, 0]],[[-1, 0, 0],[0, 0, -1],[0, -1, 0]],
            [[1,  0, 0],[0,  1,  0],[ 0, 0, 1]],[[ 1, 0,  0],[0,  0,  1],[ 0, -1,  0]],[[1,  0,  0],[ 0, -1,  0],[0, 0, -1]],[[1,  0,  0],[ 0, 0, -1],[ 0,  1,  0]],
            [[ 0,  0, -1],[ 0,  1,  0],[ 1, 0, 0]],[[-1, 0,  0],[ 0,  1,  0],[0,  0, -1]],[[0,  0, 1],[ 0,  1,  0],[-1,  0,  0]],
            [[ 0,  1,  0],[-1,  0,  0],[ 0, 0, 1]],[[-1, 0,  0],[ 0, -1,  0],[0,  0,  1]],[[0, -1, 0],[ 1,  0,  0],[ 0,  0,  1]],
            [[ 0,  1,  0],[ 0,  0,  1],[ 1, 0, 0]],[[ 0, 0,  1],[ 1,  0,  0],[0,  1,  0]],[[0,  0, 1],[-1,  0, -0],[ 0, -1,  0]],
            [[ 0, -1,  0],[ 0,  0, -1],[ 1, 0, 0]],[[ 0, 0, -1],[ 1,  0,  0],[0, -1,  0]],[[0,  1, 0],[ 0,  0, -1],[-1,  0,  0]],
            [[ 0, -1,  0],[ 0,  0,  1],[-1, 0, 0]],[[ 0, 0, -1],[-1,  0,  0],[0,  1,  0]],[[0,  0, 1],[ 0, -1,  0],[ 1,  0,  0]],
            [[ 0,  0, -1],[ 0, -1,  0],[-1, 0, 0]],[[ 0, 1,  0],[ 1,  0,  0],[0,  0, -1]],[[0, -1, 0],[-1,  0,  0],[ 0,  0, -1]],
            [[-1,  0,  0],[ 0,  0,  1],[ 0, 1, 0]],[[-1, 0,  0],[ 0,  0, -1],[0, -1,  0]]]),

    "T_2g": np.array(
           [[[ 1,  0,  0],[ 0,  1,  0],[ 0,  0, 1]],[[-1,  0,  0],[ 0, 0,  1],[ 0, -1,  0]],[[1, 0,  0],[0, -1,  0],[ 0, 0, -1]],[[-1,  0,  0],[ 0, 0, -1],[ 0,  1,  0]],
            [[ 0,  0, -1],[ 0, -1,  0],[ 1,  0, 0]],[[-1,  0,  0],[ 0, 1,  0],[ 0,  0, -1]],[[0, 0,  1],[0, -1,  0],[-1, 0,  0]],[[ 0,  1,  0],[-1, 0,  0],[ 0,  0, -1]],
            [[-1,  0,  0],[ 0, -1,  0],[ 0,  0, 1]],[[ 0, -1,  0],[ 1, 0,  0],[ 0,  0, -1]],[[0, 0,  1],[1,  0,  0],[ 0, 1,  0]],[[ 0,  1,  0],[ 0, 0,  1],[ 1,  0,  0]],
            [[ 0, -1,  0],[ 0,  0, -1],[ 1,  0, 0]],[[ 0, -0,  1],[-1, 0,  0],[ 0, -1,  0]],[[0, 1,  0],[0,  0, -1],[-1, 0,  0]],[[ 0,  0, -1],[ 1, 0,  0],[ 0, -1,  0]],
            [[ 0,  0, -1],[-1,  0,  0],[ 0,  1, 0]],[[ 0, -1,  0],[ 0, 0,  1],[-1,  0,  0]],[[0, 0, -1],[0,  1,  0],[-1, 0,  0]],[[ 0,  0,  1],[ 0, 1,  0],[ 1,  0,  0]],
            [[ 0, -1,  0],[-1,  0,  0],[ 0,  0, 1]],[[ 0,  1,  0],[ 1, 0,  0],[ 0,  0,  1]],[[1, 0,  0],[0,  0, -1],[ 0,-1,  0]],[[ 1,  0,  0],[ 0, 0,  1],[ 0,  1,  0]],
            [[ 1,  0,  0],[ 0,  1,  0],[ 0,  0, 1]],[[-1,  0,  0],[ 0, 0, -1],[ 0,  1,  0]],[[1, 0,  0],[0, -1,  0],[ 0, 0, -1]],[[-1,  0,  0],[ 0, 0,  1],[ 0, -1,  0]],
            [[ 0,  0,  1],[ 0, -1,  0],[-1,  0, 0]],[[-1,  0,  0],[ 0, 1,  0],[ 0,  0, -1]],[[0, 0, -1],[0, -1,  0],[ 1, 0,  0]],[[ 0, -1,  0],[ 1, 0,  0],[ 0,  0, -1]],
            [[-1,  0,  0],[ 0, -1,  0],[ 0,  0, 1]],[[ 0,  1,  0],[-1, 0,  0],[ 0,  0, -1]],[[0, 1,  0],[0,  0,  1],[ 1, 0,  0]],[[ 0,  0,  1],[ 1, 0,  0],[ 0,  1,  0]],
            [[ 0,  0,  1],[-1,  0,  0],[ 0, -1, 0]],[[ 0, -1,  0],[ 0, 0, -1],[ 1,  0,  0]],[[0, 0, -1],[1,  0,  0],[ 0,-1,  0]],[[ 0,  1,  0],[ 0, 0, -1],[-1,  0,  0]],
            [[ 0, -1,  0],[ 0,  0,  1],[-1,  0, 0]],[[ 0,  0, -1],[-1, 0,  0],[ 0,  1,  0]],[[0, 0, -1],[0,  1,  0],[-1, 0,  0]],[[ 0,  0,  1],[ 0, 1,  0],[ 1,  0,  0]],
            [[ 0, -1,  0],[-1,  0,  0],[ 0,  0, 1]],[[ 0,  1,  0],[ 1, 0,  0],[ 0,  0,  1]],[[1, 0,  0],[0,  0, -1],[ 0,-1,  0]],[[ 1,  0,  0],[ 0, 0,  1],[ 0,  1,  0]]]),
    "A_1u": np.array([[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
                     [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
                     [[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],[[1]],
                     [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],
                     [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],
                     [[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]]]),
    "A_2u": np.array([ [[1]],[[-1]], [[1]],[[-1]],[[-1]], [[1]],[[-1]],[[-1]],
                      [[1]],[[-1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]],
                      [[1]], [[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],
                     [[-1]], [[1]],[[-1]], [[1]], [[1]],[[-1]], [[1]], [[1]],
                     [[-1]], [[1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],[[-1]],
                     [[-1]],[[-1]], [[1]], [[1]], [[1]], [[1]], [[1]], [[1]]]),
    "E_u": np.array(
          [[[  1,   0],[  0,   1]],[[-c3, -s3],[-s3,  c3]],[[  1,   0],[  0,   1]],[[-c3, -s3],[-s3,  c3]],
           [[-c3,  s3],[ s3,  c3]],[[  1,   0],[  0,   1]],[[-c3,  s3],[ s3,  c3]],[[  1,   0],[  0,  -1]],
           [[  1,   0],[  0,   1]],[[  1,   0],[  0,  -1]],[[-c3, -s3],[ s3, -c3]],[[-c3,  s3],[-s3, -c3]],
           [[-c3,  s3],[-s3, -c3]],[[-c3, -s3],[ s3, -c3]],[[-c3,  s3],[-s3, -c3]],[[-c3, -s3],[ s3, -c3]],
           [[-c3, -s3],[ s3, -c3]],[[-c3,  s3],[-s3, -c3]],[[-c3,  s3],[ s3,  c3]],[[-c3,  s3],[ s3,  c3]],
           [[  1,   0],[  0,  -1]],[[  1,   0],[  0,  -1]],[[-c3, -s3],[-s3,  c3]],[[-c3, -s3],[-s3,  c3]],
           -1*np.array([[  1,   0],[  0,   1]]),-1*np.array([[-c3, -s3],[-s3,  c3]]),-1*np.array([[  1,   0],[  0,   1]]),-1*np.array([[-c3, -s3],[-s3,  c3]]),
           -1*np.array([[-c3,  s3],[ s3,  c3]]),-1*np.array([[  1,   0],[  0,   1]]),-1*np.array([[-c3,  s3],[ s3,  c3]]),-1*np.array([[  1,   0],[  0,  -1]]),
           -1*np.array([[  1,   0],[  0,   1]]),-1*np.array([[  1,   0],[  0,  -1]]),-1*np.array([[-c3,  s3],[-s3, -c3]]),-1*np.array([[-c3, -s3],[ s3, -c3]]),
           -1*np.array([[-c3, -s3],[ s3, -c3]]),-1*np.array([[-c3,  s3],[-s3, -c3]]),-1*np.array([[-c3, -s3],[ s3, -c3]]),-1*np.array([[-c3,  s3],[-s3, -c3]]),
           -1*np.array([[-c3,  s3],[-s3, -c3]]),-1*np.array([[-c3, -s3],[ s3, -c3]]),-1*np.array([[-c3,  s3],[ s3,  c3]]),-1*np.array([[-c3,  s3],[ s3,  c3]]),
           -1*np.array([[  1,   0],[  0,  -1]]),-1*np.array([[  1,   0],[  0,  -1]]),-1*np.array([[-c3, -s3],[-s3,  c3]]),-1*np.array([[-c3, -s3],[-s3,  c3]])]),
    "T_1u": np.array(
           [[[ 1,  0,  0],[ 0,  1,  0],[ 0, 0,  1]],[[ 1,  0,  0],[ 0, 0, -1],[ 0,  1,  0]],[[ 1, 0,  0],[0, -1,  0],[ 0, 0, -1]],[[ 1,  0,  0],[0,  0,  1],[ 0, -1, 0]],
            [[ 0,  0,  1],[ 0,  1,  0],[-1, 0,  0]],[[-1,  0,  0],[ 0, 1,  0],[ 0,  0, -1]],[[ 0, 0, -1],[0,  1,  0],[ 1, 0,  0]],[[ 0, -1,  0],[1,  0,  0],[ 0,  0, 1]],
            [[-1,  0,  0],[ 0, -1,  0],[ 0, 0,  1]],[[ 0,  1,  0],[-1, 0,  0],[ 0,  0,  1]],[[ 0, 0,  1],[1,  0,  0],[ 0, 1,  0]],[[ 0,  1,  0],[0,  0,  1],[ 1,  0, 0]],
            [[ 0, -1,  0],[ 0,  0, -1],[ 1, 0,  0]],[[ 0,  0,  1],[-1, 0,  0],[ 0, -1,  0]],[[ 0, 1,  0],[0,  0, -1],[-1, 0,  0]],[[ 0,  0, -1],[1,  0,  0],[ 0, -1, 0]],
            [[ 0,  0, -1],[-1,  0,  0],[ 0, 1,  0]],[[ 0, -1,  0],[ 0, 0,  1],[-1,  0,  0]],[[ 0, 0,  1],[0, -1,  0],[ 1, 0,  0]],[[ 0,  0, -1],[0, -1,  0],[-1,  0, 0]],
            [[ 0,  1,  0],[ 1,  0,  0],[ 0, 0, -1]],[[ 0, -1,  0],[-1, 0,  0],[ 0,  0, -1]],[[-1, 0,  0],[0,  0,  1],[ 0, 1,  0]],[[-1,  0,  0],[0,  0, -1],[ 0, -1, 0]],
            -1*np.array([[ 1,  0,  0],[ 0,  1, 0],[ 0,  0,  1]]),-1*np.array([[ 1,  0,  0],[ 0, 0,  1],[0, -1,  0]]),-1*np.array([[ 1, 0,  0],[0, -1, 0],[ 0,  0, -1]]),-1*np.array([[ 1, 0,  0],[ 0,  0, -1],[ 0,  1, 0]]),
            -1*np.array([[ 0,  0, -1],[ 0,  1, 0],[ 1,  0,  0]]),-1*np.array([[-1,  0,  0],[ 0, 1,  0],[0,  0, -1]]),-1*np.array([[ 0, 0,  1],[0,  1, 0],[-1,  0,  0]]),-1*np.array([[ 0, 1,  0],[-1,  0,  0],[ 0,  0, 1]]),
            -1*np.array([[-1,  0,  0],[ 0, -1, 0],[ 0,  0,  1]]),-1*np.array([[ 0, -1,  0],[ 1, 0,  0],[0,  0,  1]]),-1*np.array([[ 0, 1,  0],[0,  0, 1],[ 1,  0,  0]]),-1*np.array([[ 0, 0,  1],[ 1,  0,  0],[ 0,  1, 0]]),
            -1*np.array([[ 0,  0,  1],[-1,  0, 0],[ 0, -1,  0]]),-1*np.array([[ 0, -1,  0],[ 0, 0, -1],[1,  0,  0]]),-1*np.array([[ 0, 0, -1],[1,  0, 0],[ 0, -1,  0]]),-1*np.array([[ 0, 1,  0],[ 0,  0, -1],[-1,  0, 0]]),
            -1*np.array([[ 0, -1,  0],[ 0,  0, 1],[-1,  0,  0]]),-1*np.array([[ 0,  0, -1],[-1, 0,  0],[0,  1,  0]]),-1*np.array([[ 0, 0,  1],[0, -1, 0],[ 1,  0,  0]]),-1*np.array([[ 0, 0, -1],[ 0, -1,  0],[-1,  0, 0]]),
            -1*np.array([[ 0,  1,  0],[ 1,  0, 0],[ 0,  0, -1]]),-1*np.array([[ 0, -1,  0],[-1, 0,  0],[0,  0, -1]]),-1*np.array([[-1, 0,  0],[0,  0, 1],[ 0,  1,  0]]),-1*np.array([[-1, 0,  0],[ 0,  0, -1],[ 0, -1, 0]])]),

    "T_2u": np.array(
           [[[ 1,  0,  0],[ 0,  1,  0],[0, 0, 1]],[[-1,  0, 0],[ 0, 0, 1],[ 0, -1,  0]],[[1, 0,  0],[0, -1,  0],[ 0,  0, -1]],[[-1, 0,  0],[ 0, 0, -1],[0,  1,  0]],
            [[ 0,  0, -1],[ 0, -1,  0],[1, 0, 0]],[[-1,  0, 0],[ 0, 1, 0],[ 0,  0, -1]],[[0, 0,  1],[0, -1,  0],[-1,  0,  0]],[[ 0, 1,  0],[-1, 0,  0],[0,  0, -1]],
            [[-1,  0,  0],[ 0, -1,  0],[0, 0, 1]],[[ 0, -1, 0],[ 1, 0, 0],[ 0,  0, -1]],[[0, 0,  1],[1,  0,  0],[ 0,  1,  0]],[[ 0, 1,  0],[ 0, 0,  1],[1,  0,  0]],
            [[ 0, -1,  0],[ 0,  0, -1],[1, 0, 0]],[[ 0,  0, 1],[-1, 0, 0],[ 0, -1,  0]],[[0, 1,  0],[0,  0, -1],[-1,  0,  0]],[[ 0, 0, -1],[ 1, 0,  0],[0, -1,  0]],
            [[ 0,  0, -1],[-1,  0,  0],[0, 1, 0]],[[ 0, -1, 0],[ 0, 0, 1],[-1,  0,  0]],[[0, 0, -1],[0,  1,  0],[-1,  0,  0]],[[ 0, 0,  1],[ 0, 1,  0],[1,  0,  0]],
            [[ 0, -1,  0],[-1,  0,  0],[0, 0, 1]],[[ 0,  1, 0],[ 1, 0, 0],[ 0,  0,  1]],[[1, 0,  0],[0,  0, -1],[ 0, -1,  0]],[[ 1, 0,  0],[ 0, 0,  1],[0,  1,  0]],
            -1*np.array([[ 1,  0, 0],[ 0,  1, 0],[ 0,  0, 1]]),-1*np.array([[-1,  0,  0],[ 0, 0, -1],[0, 1,  0]]),-1*np.array([[1, 0,  0],[0, -1,  0],[ 0,  0, -1]]),-1*np.array([[-1,  0, 0],[0, 0,  1],[ 0, -1,  0]]),
            -1*np.array([[ 0,  0, 1],[ 0, -1, 0],[-1,  0, 0]]),-1*np.array([[-1,  0,  0],[ 0, 1,  0],[0, 0, -1]]),-1*np.array([[0, 0, -1],[0, -1,  0],[ 1,  0,  0]]),-1*np.array([[ 0, -1, 0],[1, 0,  0],[ 0,  0, -1]]),
            -1*np.array([[-1,  0, 0],[ 0, -1, 0],[ 0,  0, 1]]),-1*np.array([[ 0,  1,  0],[-1, 0,  0],[0, 0, -1]]),-1*np.array([[0, 1,  0],[0,  0,  1],[ 1,  0,  0]]),-1*np.array([[ 0,  0, 1],[1, 0,  0],[ 0,  1,  0]]),
            -1*np.array([[ 0,  0, 1],[-1,  0, 0],[ 0, -1, 0]]),-1*np.array([[ 0, -1,  0],[ 0, 0, -1],[1, 0,  0]]),-1*np.array([[0, 0, -1],[1,  0,  0],[ 0, -1,  0]]),-1*np.array([[ 0,  1, 0],[0, 0, -1],[-1,  0,  0]]),
            -1*np.array([[ 0, -1, 0],[ 0,  0, 1],[-1,  0, 0]]),-1*np.array([[ 0,  0, -1],[-1, 0,  0],[0, 1,  0]]),-1*np.array([[0, 0, -1],[0,  1,  0],[-1,  0,  0]]),-1*np.array([[ 0,  0, 1],[0, 1,  0],[ 1,  0,  0]]),
            -1*np.array([[ 0, -1, 0],[-1,  0, 0],[ 0,  0, 1]]),-1*np.array([[ 0,  1,  0],[ 1, 0,  0],[0, 0,  1]]),-1*np.array([[1, 0,  0],[0,  0, -1],[ 0, -1,  0]]),-1*np.array([[ 1,  0, 0],[0, 0,  1],[ 0,  1,  0]])])
}

from .Ih_irrep_mats import irrm_I, irrm_Ih